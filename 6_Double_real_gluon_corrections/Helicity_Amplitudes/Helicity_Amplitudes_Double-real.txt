DOUBLE-REAL HELICITY AMPLITUDES

<!-- Helicities: quark - antiquark - gluon_5 - gluon_6 - lepton - antilepton -->

--------------------------------------------------------------------------------------


# 3-point amplitudes

MLRLLLL_3 = (alpha_s / (2 * pi))^2 * (vev/2 * C1) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( Nc * ((Sq[1,2] * Sq[1,4] * Sq[2,4] * Ang[3,4] * Ang[2,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[1,2] * Sq[1,4] * Sq[2,4] * Ang[3,4] * Ang[2,6]) / (Sq[1,5] * Sq[5,6]) + (Sq[1,2] * Sq[1,4] * Ang[3,4] * Sq[4,5] * Ang[5,6]) / (Sq[1,5] * Sq[5,6]) - (Sq[1,2] * Sq[1,4] * Ang[3,4] * Sq[4,6] * Ang[5,6]) / (Sq[5,6] * Sq[1,6])) - 2 * Cf * ((Sq[1,2]**2 * Sq[1,4] * Ang[3,4] * Sq[4,5] * Ang[5,6]) / (Sq[1,5] * Sq[2,5] * Sq[1,6]) - (Sq[1,2]**2 * Sq[1,4] * Ang[3,4] 
		* Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,2]**2 * Sq[1,4] * Sq[2,4] * Ang[3,4] * Ang[2,5]) / (Sq[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,2]**2 * Sq[1,4] * Sq[2,4] * Ang[3,4] * Ang[2,6]) / (Sq[1,5] * Sq[2,5] * Sq[1,6])))

MLRLRLL_3 = (alpha_s / (2 * pi))^2 * (vev/2 * C1) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* 2 * Cf * ( 4 * Cf * (Sq[1,2] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,4] * Sq[2,4] * Ang[1,5] * Sq[1,6] * Ang[3,4]) / (Sq[1,5] * Ang[1,6]) - (Sq[1,6] * Sq[2,4] * Ang[3,4] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Ang[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Sq[1,4] * Sq[2,4] * Sq[2,6] * Ang[3,4]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) - (Sq[1,2] * Sq[1,4] * Ang[1,5] * Sq[2,6] * Ang[3,4] * Sq[4,5]) 
		/ (Sq[1,5] * Ang[1,6] * Sq[2,5]) - (Sq[1,2] * Sq[1,4] * Sq[2,6] * Ang[3,4] * Sq[4,6]) / (Sq[1,5] * Sq[2,5])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Sq[1,4] * Sq[2,4] * Ang[2,5] * Ang[3,4]) / (Sq[1,5] * Ang[1,6] * Ang[2,6]) - (s[1,2] * Sq[1,4] * Ang[3,4] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Ang[1,6] * Ang[2,6]) - (Sq[1,4] * Sq[1,6] * Sq[2,4] * Ang[2,5] * Ang[3,4]) / (Sq[1,5] * Ang[2,6]) + (Sq[1,4] * Sq[1,6] * Ang[3,4] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Ang[2,6])) + 4 * Cf 
		* 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,5] * Sq[1,6]**2 * Sq[2,4] * Ang[3,4] * Sq[4,5]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) + (Sq[1,6]**2 * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Sq[1,5] * Sq[5,6]) - (Ang[1,5] * Sq[1,6] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Ang[1,6] * Sq[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2] * Sq[1,4] * Ang[1,5] * Sq[2,4] * Ang[2,5] * Ang[3,4]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) + (Ang[1,2] * Sq[1,4] * Sq[1,6] * Sq[2,4] * Sq[2,6] * Ang[3,4]) / (Sq[1,5] 
		* Ang[1,6] * Sq[5,6]) - (Sq[1,2] * Sq[1,4] * Ang[1,5] * Ang[3,4] * Sq[4,6]) / (Sq[1,5] * Ang[1,6]) - (Sq[1,4] * Sq[1,6] * Sq[2,6] * Ang[3,4] * Sq[4,6]) / (Sq[1,5] * Sq[5,6]) - (Sq[1,4] * Ang[1,5] * Sq[1,6] * Sq[2,6] * Ang[3,4] * Sq[4,5]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) - (Sq[1,4] * Ang[1,5] * Sq[1,6] * Sq[2,5] * Ang[3,4] * Sq[4,6]) / (Sq[1,5] * Ang[1,6] * Sq[5,6])) - Nc * (s[1,5] - s[1,6] - s[5,6]) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Sq[1,4] * Ang[1,5] * Sq[1,6] 
		* Sq[2,4] * Ang[3,4]) / (Sq[1,5] * Ang[1,6]) - Nc * (s[2,5] - s[2,6] - s[5,6]) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Sq[1,4] * Ang[1,5] * Sq[1,6] * Sq[2,4] * Ang[3,4]) / (Sq[1,5] * Ang[1,6]))

MLRRLLL_3 = (alpha_s / (2 * pi))^2 * (vev/2 * C1) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* 2 * Cf * ( - 4 * Cf * (Sq[1,2] * Sq[2,4] * Ang[3,4] * Sq[4,5]) / (Ang[1,5] * Sq[1,6] * Sq[2,6]) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,4] * Sq[1,5] * Ang[1,6] * Sq[2,4] * Ang[3,4]) / (Ang[1,5] * Sq[1,6]) + (Sq[1,5] * Sq[2,4] * Ang[3,4] * Sq[4,5] * Ang[5,6]) / (Ang[1,5] * Sq[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Sq[1,4] * Sq[2,4] * Ang[2,6] * Ang[3,4]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) + (s[1,2] * Sq[1,4] * Ang[3,4] * Sq[4,5] * Ang[5,6]) / (Ang[1,5] 
		* Sq[1,6] * Ang[2,5]) + (s[1,2] * Sq[1,4] * Sq[2,4] * Sq[2,5] * Ang[3,4]) / (Ang[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,4] * Sq[1,5] * Sq[2,4] * Ang[2,6] * Ang[3,4]) / (Sq[1,6] * Ang[2,5]) + (Sq[1,4] * Sq[1,5] * Ang[3,4] * Sq[4,5] * Ang[5,6]) / (Sq[1,6] * Ang[2,5]) - (Sq[1,2] * Sq[1,4] * Sq[2,5] * Ang[3,4] * Sq[4,5]) / (Sq[1,6] * Sq[2,6]) - (Sq[1,2] * Sq[1,4] * Ang[1,6] * Sq[2,5] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Sq[1,6] * Sq[2,6])) + 2 * Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) 
		* ((Sq[1,5]**2 * Sq[2,4] * Ang[3,4] * Sq[4,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[1,5]**2 * Ang[1,6] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Sq[1,6] * Sq[5,6]) - (Sq[1,5]**2 * Ang[1,6] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Sq[1,6] * Sq[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2] * Sq[1,4] * Sq[1,5] * Sq[2,4] * Sq[2,5] * Ang[3,4]) / (Ang[1,5] * Sq[1,6] * Sq[5,6]) - (Sq[1,4] * Sq[1,5] * Sq[2,5] * Ang[3,4] * Sq[4,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[1,2] * Sq[1,4] 
		* Ang[1,6] * Sq[2,4] * Ang[2,6] * Ang[3,4]) / (Ang[1,5] * Sq[1,6] * Ang[5,6]) + (Sq[1,2] * Sq[1,4] * Ang[1,6] * Ang[3,4] * Sq[4,5]) / (Ang[1,5] * Sq[1,6])) - Nc * ((s[1,5] - s[1,6] - s[5,6])) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Sq[1,4] * Sq[1,5] * Ang[1,6] * Sq[2,4] * Ang[3,4]) / (Ang[1,5] * Sq[1,6]) - Nc * ((s[2,5] - s[2,6] - s[5,6])) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Sq[1,4] * Sq[1,5] * Ang[1,6] * Sq[2,4] * Ang[3,4]) / (Ang[1,5] * Sq[1,6]))

MLRRRLL_3 = (alpha_s / (2 * pi))^2 * (vev/2 * C1) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* 4 * Cf * ( 2 * Cf * ((Ang[1,2] * Sq[2,4] * Ang[3,4] * Sq[4,5]) / (Ang[1,5] * Ang[1,6] * Ang[2,6]) + (Ang[1,2] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) + (Ang[3,4] * Sq[4,5] * Sq[4,6]) / (Ang[1,5] * Ang[2,6]) + (Ang[3,4] * Sq[4,5] * Sq[4,6]) / (Ang[1,6] * Ang[2,5])) + 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( - (Ang[1,2]**2 * Sq[1,4] * Sq[2,4] * Sq[2,6] * Ang[3,4]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) - (Ang[1,2]**2 * Sq[1,4] * Sq[2,4] * Sq[2,5] * Ang[3,4]) / (Ang[1,5] 
		* Ang[1,6] * Ang[2,6]) - (Ang[1,2] * Sq[1,4] * Sq[2,6] * Ang[3,4] * Sq[4,5]) / (Ang[1,6] * Ang[2,5]) - (Ang[1,2] * Sq[1,4] * Sq[2,5] * Ang[3,4] * Sq[4,5]) / (Ang[1,6] * Ang[2,6]) - (Ang[1,2] * Sq[1,4] * Sq[2,6] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Ang[2,5]) - (Ang[1,2] * Sq[1,4] * Sq[2,5] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Ang[2,6]) + (Ang[1,2] * Sq[1,4] * Sq[2,4] * Ang[3,4] * Sq[5,6]) / (Ang[1,6] * Ang[2,5]) - (Ang[1,2] * Sq[1,4] * Sq[2,4] * Ang[3,4] * Sq[5,6]) / (Ang[1,5] * Ang[2,6]) 
		+ (Sq[1,4] * Ang[1,5] * Ang[3,4] * Sq[4,5] * Sq[5,6]) / (Ang[1,6] * Ang[2,5]) - (Sq[1,4] * Ang[1,6] * Ang[3,4] * Sq[4,6] * Sq[5,6]) / (Ang[1,5] * Ang[2,6]) + (Sq[1,4] * Ang[3,4] * Sq[4,6] * Sq[5,6]) / (Ang[2,5]) - (Sq[1,4] * Ang[3,4] * Sq[4,5] * Sq[5,6]) / (Ang[2,6])) + Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,6] * Sq[2,4] * Ang[3,4] * Sq[4,5]) / (Ang[5,6]) + (Sq[1,5] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Ang[5,6]) + (s[1,6] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Ang[5,6]) 
		+ (s[1,5] * Sq[2,4] * Ang[3,4] * Sq[4,5]) / (Ang[1,6] * Ang[5,6])) + Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2] * Sq[1,4] * Sq[2,4] * Sq[2,5] * Ang[3,4]) / (Ang[1,6] * Ang[5,6]) + (Ang[1,2] * Sq[1,4] * Sq[2,4] * Sq[2,6] * Ang[3,4]) / (Ang[1,5] * Ang[5,6]) + (Sq[1,4] * Sq[2,5] * Ang[3,4] * Sq[4,6]) / (Ang[5,6]) + (Sq[1,4] * Sq[2,6] * Ang[3,4] * Sq[4,5]) / (Ang[5,6]) + (Sq[1,4] * Ang[1,5] * Sq[2,5] * Ang[3,4] * Sq[4,5]) / (Ang[1,6] * Ang[5,6]) + (Sq[1,4] * Ang[1,6] * Sq[2,6] 
		* Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Ang[5,6])))

MRLLLLL_3 = (alpha_s / (2 * pi))^2 * (vev/2 * C2) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* 4 * Cf * ( - 2 * Cf * ((Sq[1,2] * Ang[2,3] * Sq[3,4] * Ang[3,5]) / (Sq[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,2] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Sq[1,5] * Sq[1,6] * Sq[2,5]) + (Sq[3,4] * Ang[3,5] * Ang[3,6]) / (Sq[1,5] * Sq[2,6]) + (Sq[3,4] * Ang[3,5] * Ang[3,6]) / (Sq[1,6] * Sq[2,5])) + 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2]**2 * Ang[1,3] * Ang[2,3] * Sq[3,4] * Ang[2,6]) / (Sq[1,5] * Sq[1,6] * Sq[2,5]) + (Sq[1,2]**2 * Ang[1,3] * Ang[2,3] * Sq[3,4] * Ang[2,5]) / (Sq[1,5] 
		* Sq[1,6] * Sq[2,6]) + (Sq[1,2] * Ang[1,3] * Sq[3,4] * Ang[3,5] * Ang[2,6]) / (Sq[1,6] * Sq[2,5]) + (Sq[1,2] * Ang[1,3] * Sq[3,4] * Ang[2,5] * Ang[3,6]) / (Sq[1,5] * Sq[2,6]) + (Sq[1,2] * Ang[1,3] * Sq[3,4] * Ang[2,6] * Ang[3,6]) / (Sq[1,5] * Sq[2,5]) + (Sq[1,2] * Ang[1,3] * Sq[3,4] * Ang[2,5] * Ang[3,5]) / (Sq[1,6] * Sq[2,6]) - (Sq[1,2] * Ang[1,3] * Ang[2,3] * Sq[3,4] * Ang[5,6]) / (Sq[1,6] * Sq[2,5]) + (Sq[1,2] * Ang[1,3] * Ang[2,3] * Sq[3,4] * Ang[5,6]) / (Sq[1,5] * Sq[2,6]) 
		- (Ang[1,3] * Sq[1,5] * Sq[3,4] * Ang[3,5] * Ang[5,6]) / (Sq[1,6] * Sq[2,5]) - (Ang[1,3] * Sq[1,6] * Sq[3,4] * Ang[3,6] * Ang[5,6]) / (Sq[1,5] * Sq[2,6]) - (Ang[1,3] * Sq[3,4] * Ang[3,6] * Ang[5,6]) / (Sq[2,5]) + (Ang[1,3] * Sq[3,4] * Ang[3,5] * Ang[5,6]) / (Sq[2,6])) - Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[2,3] * Ang[1,6] * Sq[3,4] * Ang[3,5]) / (Sq[5,6]) + (Ang[2,3] * Ang[1,5] * Sq[3,4] * Ang[3,6]) / (Sq[5,6]) + (s[1,6] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Sq[1,5] * Sq[5,6]) 
		+ (s[1,5] * Ang[2,3] * Sq[3,4] * Ang[3,5]) / (Sq[1,6] * Sq[5,6])) - Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2] * Ang[1,3] * Ang[2,3] * Sq[3,4] * Ang[2,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[1,2] * Ang[1,3] * Ang[2,3] * Sq[3,4] * Ang[2,6]) / (Sq[1,5] * Sq[5,6]) + (Ang[1,3] * Sq[3,4] * Sq[1,5] * Ang[2,5] * Ang[3,5]) / (Sq[1,6] * Sq[5,6]) + (Ang[1,3] * Sq[3,4] * Sq[1,6] * Ang[2,6] * Ang[3,6]) / (Sq[1,5] * Sq[5,6]) + (Ang[1,3] * Sq[3,4] * Ang[2,5] * Ang[3,6]) / (Sq[5,6]) + (Ang[1,3] 
		* Sq[3,4] * Ang[2,6] * Ang[3,5]) / (Sq[5,6])))

MRLLRLL_3 = (alpha_s / (2 * pi))^2 * (vev/2 * C2) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* 2 * Cf * ( - 4 * Cf * ((Ang[1,2] * Ang[2,3] * Sq[3,4] * Ang[3,5]) / (Sq[1,5] * Ang[1,6] * Ang[2,6]) + (Sq[1,2] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (Sq[3,4] * Ang[3,5] * Ang[3,6]) / (Ang[1,6] * Sq[2,5])) - 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,3] * Ang[2,3] * Ang[1,5] * Sq[1,6] * Sq[3,4]) / (Sq[1,5] * Ang[1,6]) + (Ang[1,5] * Ang[2,3] * Sq[3,4] * Ang[3,5] * Sq[5,6]) / (Sq[1,5] * Ang[1,6])) - 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] 
		* Ang[1,3] * Ang[2,3] * Sq[3,4] * Sq[2,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (s[1,2] * Ang[1,3] * Ang[3,5] * Sq[3,4] * Sq[5,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) - (s[1,2] * Ang[1,3] * Ang[2,3] * Ang[2,5] * Sq[3,4]) / (Sq[1,5] * Ang[1,6] * Ang[2,6]) + (s[1,5] * Ang[1,3] * Ang[2,3] * Sq[3,4] * Sq[2,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) - (s[1,5] * Ang[1,3] * Ang[3,5] * Sq[3,4] * Sq[5,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (Ang[1,2] * Ang[2,5] * Ang[1,3] * Ang[3,5] * Sq[3,4]) 
		/ (Ang[1,6] * Ang[2,6]) + (Ang[1,2] * Ang[2,5] * Sq[1,6] * Ang[1,3] * Ang[3,6] * Sq[3,4]) / (Sq[1,5] * Ang[1,6] * Ang[2,6])) - 2 * Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,5]**2 * Ang[2,3] * Ang[3,5] * Sq[3,4]) / (Ang[1,6] * Ang[5,6]) + (Ang[1,5]**2 * Sq[1,6] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) - (Ang[1,5]**2 * Sq[1,6] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Sq[1,5] * Ang[1,6] * Ang[5,6])) - 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2] * Ang[1,3] * Ang[1,5] 
		* Ang[2,3] * Ang[2,5] * Sq[3,4]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) + (Ang[1,3] * Ang[1,5] * Ang[2,5] * Sq[3,4] * Ang[3,5]) / (Ang[1,6] * Ang[5,6]) + (Ang[1,2] * Ang[1,3] * Sq[1,6] * Ang[2,3] * Sq[2,6] * Sq[3,4]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) + (Ang[1,2] * Ang[1,3] * Sq[1,6] * Sq[3,4] * Ang[3,5] * Sq[5,6]) / (Sq[1,5] * Ang[1,6] * Sq[5,6])) + Nc * ((s[1,5] - s[1,6] - s[5,6])) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Ang[1,3] * Ang[1,5] * Sq[1,6] * Ang[2,3] * Sq[3,4]) / (Sq[1,5] 
		* Ang[1,6]) + Nc * ((s[2,5] - s[2,6] - s[5,6])) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Ang[1,3] * Ang[1,5] * Sq[1,6] * Ang[2,3] * Sq[3,4]) / (Sq[1,5] * Ang[1,6]))

MRLRLLL_3 = (alpha_s / (2 * pi))^2 * (vev/2 * C2) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* 2 * Cf * ( - 4 * Cf * (Ang[1,2] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,6] * Ang[2,3] * Sq[3,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,5] * Sq[1,6]) - (Ang[1,3] * Sq[1,5] * Ang[1,6] * Ang[2,3] * Sq[3,4]) / (Ang[1,5] * Sq[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( - (s[1,2] * Ang[1,3] * Ang[2,3] * Ang[2,6] * Sq[3,4]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) - (s[1,2] * Ang[1,3] * Ang[2,3] * Sq[2,5] * Sq[3,4]) 
		/ (Ang[1,5] * Sq[1,6] * Sq[2,6]) - (s[1,2] * Ang[1,3] * Sq[3,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,5] * Sq[1,6] * Sq[2,6]) + (Ang[1,2] * Ang[1,3] * Sq[1,5] * Ang[2,6] * Sq[3,4] * Ang[3,5]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) + (Ang[1,2] * Ang[1,3] * Sq[1,6] * Ang[2,6] * Sq[3,4] * Ang[3,6]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) - (Ang[1,3] * Ang[1,6] * Ang[2,3] * Sq[2,5] * Sq[3,4]) / (Ang[1,5] * Sq[2,6]) + (Ang[1,3] * Ang[1,6] * Sq[3,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,5] * Sq[2,6])) + 2 * Nc * 1 
		/ (s[1,5] + s[1,6] + s[5,6]) * ( - (Sq[1,5] * Ang[1,6]**2 * Ang[2,3] * Sq[3,4] * Ang[3,5]) / (Ang[1,5] * Sq[1,6] * Ang[5,6]) - (Ang[1,6]**2 * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Ang[1,5] * Ang[5,6]) + (Sq[1,5] * Ang[1,6] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Sq[1,6] * Ang[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( - (Ang[1,2] * Ang[1,3] * Sq[1,5] * Ang[2,3] * Sq[2,5] * Sq[3,4]) / (Ang[1,5] * Sq[1,6] * Sq[5,6]) - (Sq[1,2] * Ang[1,3] * Ang[1,6] * Ang[2,3] * Ang[2,6] * Sq[3,4]) / (Ang[1,5] 
		* Sq[1,6] * Ang[5,6]) + (Ang[1,2] * Ang[1,3] * Sq[1,5] * Sq[3,4] * Ang[3,6]) / (Ang[1,5] * Sq[1,6]) + (Ang[1,3] * Ang[1,6] * Sq[1,5] * Ang[2,5] * Sq[3,4] * Ang[3,6]) / (Ang[1,5] * Sq[1,6] * Ang[5,6]) - (Ang[1,3] * Sq[1,5] * Ang[1,6] * Ang[2,6] * Sq[3,4] * Ang[3,5]) / (Ang[1,5] * Sq[1,6] * Ang[5,6]) - (Ang[1,3] * Ang[1,6] * Ang[2,6] * Sq[3,4] * Ang[3,6]) / (Ang[1,5] * Ang[5,6])) + Nc * (s[1,5] - s[1,6] - s[5,6]) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Ang[1,3] * Sq[1,5] * Ang[1,6] 
		* Ang[2,3] * Sq[3,4]) / (Ang[1,5] * Sq[1,6]) + Nc * (s[2,5] - s[2,6] - s[5,6]) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Ang[1,3] * Sq[1,5] * Ang[1,6] * Ang[2,3] * Sq[3,4]) / (Ang[1,5] * Sq[1,6]))

MRLRRLL_3 = (alpha_s / (2 * pi))^2 * (vev/2 * C2) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* 4 * Cf * ( 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2]**2 * Ang[1,3] * Ang[2,3] * Sq[2,6] * Sq[3,4]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) + (Ang[1,2]**2 * Ang[1,3] * Ang[2,3] * Sq[2,5] * Sq[3,4]) / (Ang[1,5] * Ang[1,6] * Ang[2,6]) + (Ang[1,2]**2 * Ang[1,3] * Sq[3,4] * Ang[3,5] * Sq[5,6]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) - (Ang[1,2]**2 * Ang[1,3] * Ang[2,3] * Sq[2,5] * Sq[3,4]) / (Ang[1,5] * Ang[1,6] * Ang[2,6])) + Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( - (Ang[1,2] * Ang[1,3] * Ang[2,3] 
		* Sq[2,5] * Sq[3,4]) / (Ang[1,6] * Ang[5,6]) - (Ang[1,2] * Ang[1,3] * Ang[2,3] * Sq[2,6] * Sq[3,4]) / (Ang[1,5] * Ang[5,6]) + (Ang[1,2] * Ang[1,3] * Sq[3,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,6] * Ang[5,6]) - (Ang[1,2] * Ang[1,3] * Sq[3,4] * Ang[3,5] * Sq[5,6]) / (Ang[1,5] * Ang[5,6])))

MLLLLLL_3 = (alpha_s / (2 * pi))^2 * (S3 + vev/2 * C3) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( 2 * Cf * ((Sq[1,2]**2 * Sq[1,4] * Ang[2,3] * Ang[2,6]) / (Sq[1,5] * Sq[1,6] * Sq[2,5]) + (Sq[1,2]**2 * Sq[1,4] * Ang[2,3] * Ang[2,5]) / (Sq[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,2] * Sq[1,4] * Ang[2,6] * Ang[3,5]) / (Sq[1,6] * Sq[2,5]) + (Sq[1,2] * Sq[1,4] * Ang[2,5] * Ang[3,5]) / (Sq[1,6] * Sq[2,6]) + (Sq[1,2] * Sq[1,4] * Ang[2,6] * Ang[3,6]) / (Sq[1,5] * Sq[2,5]) + (Sq[1,2] * Sq[1,4] * Ang[2,5] * Ang[3,6]) / (Sq[1,5] * Sq[2,6]) + (Sq[1,2] 
		* Ang[2,3] * Sq[1,4] * Ang[5,6]) / (Sq[1,5] * Sq[2,6]) - (Sq[1,2] * Ang[2,3] * Sq[1,4] * Ang[5,6]) / (Sq[1,6] * Sq[2,5]) + (Sq[1,4] * Sq[1,6] * Ang[3,6] * Ang[5,6]) / (Sq[1,5] * Sq[2,6]) - (Sq[1,4] * Sq[1,5] * Ang[3,5] * Ang[5,6]) / (Sq[1,6] * Sq[2,5]) + (Sq[1,4] * Ang[3,5] * Ang[5,6]) / (Sq[2,6]) - (Sq[1,4] * Ang[3,6] * Ang[5,6]) / (Sq[2,5])) + Nc * ((Sq[1,2] * Ang[2,3] * Sq[1,4] * Ang[2,5] * Ang[5,6]) / (Sq[1,6] * Sq[5,6]) - (Sq[1,2] * Ang[2,3] * Sq[1,4] * Ang[2,6] * Ang[5,6]) 
		/ (Sq[1,5] * Sq[5,6]) + (Sq[1,4] * Sq[1,5] * Ang[2,5] * Ang[3,5] * Ang[5,6]) / (Sq[1,6] * Sq[5,6]) - (Sq[1,4] * Sq[1,6] * Ang[2,6] * Ang[3,6] * Ang[5,6]) / (Sq[1,5] * Sq[5,6]) + (Sq[1,4] * Ang[2,5] * Ang[3,6] * Ang[5,6]) / (Sq[5,6]) - (Sq[1,4] * Ang[2,6] * Ang[3,5] * Ang[5,6]) / (Sq[5,6])))

MLLLRLL_3 = (alpha_s / (2 * pi))^2 * (S3 + vev/2 * C3) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* Cf * ( 4 * Cf * ((Sq[1,2] * Ang[2,3] * Sq[4,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (Ang[3,5] * Sq[4,6]) / (Ang[1,6] * Sq[2,5])) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,4] * Ang[1,5] * Sq[1,6] * Ang[2,3]) / (Sq[1,5] * Ang[1,6]) - (Sq[1,6] * Ang[2,3] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Ang[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Sq[1,4] * Ang[2,3] * Sq[2,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (s[1,2] * Sq[1,4] * Ang[3,5] * Sq[5,6]) / (Sq[1,5] * Ang[1,6] 
		* Sq[2,5]) + (s[1,2] * Sq[1,4] * Ang[2,3] * Sq[2,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (Sq[1,4] * Ang[1,5] * Ang[2,3] * Sq[2,6]) / (Ang[1,6] * Sq[2,5]) + (Sq[1,4] * Ang[1,5] * Ang[3,5] * Sq[5,6]) / (Ang[1,6] * Sq[2,5]) - (Ang[1,2] * Sq[1,4] * Sq[2,6] * Ang[3,5]) / (Ang[1,6] * Sq[2,5]) - (Ang[1,2] * Sq[1,4] * Sq[1,6] * Sq[2,6] * Ang[3,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5])) + 2 * Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,5] * Sq[1,6] * Ang[2,3] * Sq[4,6] * Ang[5,6]) / (Ang[1,6] 
		* Sq[5,6]) - (Sq[1,6]**2 * Ang[2,3] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Sq[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2] * Sq[1,4] * Ang[1,5] * Ang[2,3] * Ang[2,5]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) + (Sq[1,4] * Ang[1,5] * Ang[2,5] * Ang[3,5]) / (Ang[1,6] * Ang[5,6]) + (Ang[2,5] * Sq[1,6] * Ang[1,5] * Ang[3,6] * Sq[1,4]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) - (Ang[2,5] * Sq[1,6] * Ang[1,5] * Ang[3,6] * Sq[1,4]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) + (Ang[1,2] * Sq[1,4] * Sq[1,6] 
		* Sq[2,6] * Ang[2,3]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) + (Ang[1,2] * Sq[1,6] * Ang[3,5] * Sq[1,4]) / (Sq[1,5] * Ang[1,6])) - Nc * ((s[1,5] - s[1,6] - s[5,6])) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Sq[1,4] * Ang[1,5] * Sq[1,6] * Ang[2,3]) / (Sq[1,5] * Ang[1,6]) - Nc * ((s[2,5] - s[2,6] - s[5,6])) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Sq[1,4] * Ang[1,5] * Sq[1,6] * Ang[2,3]) / (Sq[1,5] * Ang[1,6]))

MLLRLLL_3 = (alpha_s / (2 * pi))^2 * (S3 + vev/2 * C3) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* Cf * ( 4 * Cf * ((Sq[1,2] * Ang[2,3] * Sq[4,5]) / (Ang[1,5] * Sq[1,6] * Sq[2,6]) + (Ang[3,6] * Sq[4,5]) / (Ang[1,5] * Sq[2,6])) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,4] * Sq[1,5] * Ang[1,6] * Ang[2,3]) / (Ang[1,5] * Sq[1,6]) + (Sq[1,5] * Ang[2,3] * Sq[4,5] * Ang[5,6]) / (Ang[1,5] * Sq[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Sq[1,4] * Ang[2,3] * Ang[2,6]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) + (s[1,2] * Sq[1,4] * Ang[2,3] * Sq[2,5]) / (Ang[1,5] * Sq[1,6] 
		* Sq[2,6]) - (s[1,2] * Sq[1,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,5] * Sq[1,6] * Sq[2,6]) - (Ang[1,2] * Sq[1,4] * Sq[1,5] * Ang[2,6] * Ang[3,5]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) - (Ang[1,2] * Sq[1,4] * Ang[2,6] * Ang[3,6]) / (Ang[1,5] * Ang[2,5]) + (Sq[1,4] * Ang[1,6] * Ang[2,3] * Sq[2,5]) / (Ang[1,5] * Sq[2,6]) - (Sq[1,4] * Ang[1,6] * Ang[3,6] * Sq[5,6]) / (Ang[1,5] * Sq[2,6])) + 2 * Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,5]**2 * Ang[2,3] * Sq[4,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[1,5]**2 
		* Ang[1,6] * Ang[2,3] * Sq[4,6]) / (Ang[1,5] * Sq[1,6] * Sq[5,6]) - (Sq[1,5]**2 * Ang[1,6] * Ang[2,3] * Sq[4,6]) / (Ang[1,5] * Sq[1,6] * Sq[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2] * Sq[1,5] * Sq[2,5] * Ang[2,3] * Sq[1,4]) / (Ang[1,5] * Sq[1,6] * Sq[5,6]) + (Ang[1,2] * Sq[1,4] * Sq[1,5] * Ang[3,6]) / (Ang[1,5] * Sq[1,6]) + (Sq[1,2] * Sq[1,4] * Ang[1,6] * Ang[2,3] * Ang[2,6]) / (Ang[1,5] * Sq[1,6] * Ang[5,6]) + (Sq[1,4] * Sq[1,5] * Ang[1,6] * Ang[2,6] * Ang[3,5]) 
		/ (Ang[1,5] * Sq[1,6] * Ang[5,6]) + (Sq[1,4] * Ang[1,6] * Ang[2,6] * Ang[3,6]) / (Ang[1,5] * Ang[5,6]) - (Sq[1,4] * Sq[1,5] * Ang[1,6] * Ang[2,5] * Ang[3,6]) / (Ang[1,5] * Sq[1,6] * Ang[5,6])) - Nc * (s[1,5] - s[1,6] - s[5,6]) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Sq[1,4] * Sq[1,5] * Ang[1,6] * Ang[2,3]) / (Ang[1,5] * Sq[1,6]) - Nc * (s[2,5] - s[2,6] - s[5,6]) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Sq[1,4] * Sq[1,5] * Ang[1,6] * Ang[2,3]) / (Ang[1,5] * Sq[1,6]))

MLLRRLL_3 = (alpha_s / (2 * pi))^2 * (S3 + vev/2 * C3) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* 2 * Cf * ( 2 * Cf * ((Ang[1,2] * Ang[2,3] * Sq[4,5]) / (Ang[1,5] * Ang[1,6] * Ang[2,6]) + (Ang[1,2] * Ang[2,3] * Sq[4,6]) / (Ang[1,5] * Ang[1,6] * Ang[2,5])) + 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( - (Ang[1,2]**2 * Sq[1,4] * Ang[2,3] * Sq[2,6]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) - (Ang[1,2]**2 * Sq[1,4] * Ang[2,3] * Sq[2,5]) / (Ang[1,5] * Ang[1,6] * Ang[2,6]) - (Ang[1,2]**2 * Sq[1,4] * Ang[3,5] * Sq[5,6]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) + (Ang[1,2]**2 * Sq[1,4] * Ang[3,6] * Sq[5,6]) 
		/ (Ang[1,5] * Ang[1,6] * Ang[2,6])) + Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,6] * Ang[2,3] * Sq[4,5]) / (Ang[1,6] * Ang[5,6]) + (Sq[1,5] * Ang[2,3] * Sq[4,6]) / (Ang[5,6]) + (s[1,6] * Ang[2,3] * Sq[4,6]) / (Ang[1,5] * Ang[5,6]) + (s[1,5] * Ang[2,3] * Sq[4,5]) / (Ang[1,6] * Ang[5,6])) + Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2] * Sq[1,4] * Ang[2,3] * Sq[2,5]) / (Ang[1,6] * Ang[5,6]) + (Ang[1,2] * Sq[1,4] * Ang[2,3] * Sq[2,6]) / (Ang[1,5] * Ang[5,6]) + (Ang[1,2] * Sq[1,4] 
		* Ang[3,5] * Sq[5,6]) / (Ang[1,5] * Ang[5,6]) - (Ang[1,2] * Sq[1,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,6] * Ang[5,6])))

MRRLLLL_3 = (alpha_s / (2 * pi))^2 * (vev/2 * C4) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* 2 * Cf * ( 2 * Cf * ((Sq[1,2] * Sq[2,4] * Ang[3,5]) / (Sq[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,2] * Sq[2,4] * Ang[3,6]) / (Sq[1,5] * Sq[1,6] * Sq[2,5])) - 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2]**2 * Ang[1,3] * Sq[2,4] * Ang[2,6]) / (Sq[1,5] * Sq[2,5] * Sq[1,6]) + (Sq[1,2]**2 * Ang[1,3] * Sq[2,4] * Ang[2,5]) / (Sq[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,2]**2 * Ang[1,3] * Sq[4,5] * Ang[5,6]) / (Sq[1,5] * Sq[2,5] * Sq[1,6]) - (Sq[1,2]**2 * Ang[1,3] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] 
		* Sq[1,6] * Sq[2,6])) + Nc * (s[1,5] + s[1,6]) / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[2,4] * Ang[3,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[2,4] * Ang[3,6]) / (Sq[1,5] * Sq[5,6])) + Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2] * Ang[1,3] * Sq[2,4] * Ang[2,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[1,2] * Ang[1,3] * Sq[2,4] * Ang[2,6]) / (Sq[1,5] * Sq[5,6]) + (Sq[1,2] * Ang[1,3] * Sq[4,5] * Ang[5,6]) / (Sq[1,5] * Sq[5,6]) - (Sq[1,2] * Ang[1,3] * Sq[4,6] * Ang[5,6]) / (Sq[1,6] * Sq[5,6])))

MRRLRLL_3 = (alpha_s / (2 * pi))^2 * (vev/2 * C4) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* Cf * ( 4 * Cf * ((Ang[1,2] * Sq[2,4] * Sq[2,6] * Ang[3,5]) / (Sq[1,5] * Ang[1,6] * Ang[2,6]) + (Sq[2,6] * Ang[3,5] * Sq[4,6]) / (Sq[1,5] * Ang[2,6])) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,3] * Ang[1,5] * Sq[1,6] * Sq[2,4]) / (Sq[1,5] * Ang[1,6]) + (Ang[1,5] * Sq[2,4] * Ang[3,5] * Sq[5,6]) / (Sq[1,5] * Ang[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Ang[1,3] * Sq[2,4] * Sq[2,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (s[1,2] * Ang[1,3] * Sq[2,4] * Ang[2,5]) 
		/ (Sq[1,5] * Ang[1,6] * Ang[2,6]) - (s[1,2] * Ang[1,3] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Ang[1,6] * Ang[2,6]) - (Sq[1,2] * Ang[1,3] * Ang[1,5] * Sq[2,6] * Sq[4,5]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) - (Sq[1,2] * Ang[1,3] * Sq[2,6] * Sq[4,6]) / (Sq[1,5] * Sq[2,5]) + (Ang[1,3] * Sq[1,6] * Sq[2,4] * Ang[2,5]) / (Sq[1,5] * Ang[2,6]) - (Ang[1,3] * Sq[1,6] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Ang[2,6])) + 2 * Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,5]**2 * Sq[2,4] * Ang[3,5]) / (Ang[1,6] 
		* Ang[5,6]) + (Ang[1,5]**2 * Sq[1,6] * Sq[2,4] * Ang[3,6]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) - (Ang[1,5]**2 * Sq[1,6] * Sq[2,4] * Ang[3,6]) / (Sq[1,5] * Ang[1,6] * Ang[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( - (Sq[1,2] * Ang[1,3] * Ang[1,5] * Sq[2,4] * Ang[2,5]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) + (Sq[1,2] * Ang[1,3] * Ang[1,5] * Sq[4,6]) / (Sq[1,5] * Ang[1,6]) + (Ang[1,2] * Ang[1,3] * Sq[1,6] * Sq[2,4] * Sq[2,6]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) + (Ang[1,3] * Ang[1,5] * Sq[1,6] 
		* Sq[2,6] * Sq[4,5]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) + (Ang[1,3] * Ang[1,6] * Sq[1,6] * Sq[2,6] * Sq[4,6]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) - (Ang[1,3] * Ang[1,5] * Sq[1,6] * Sq[2,5] * Sq[4,6]) / (Sq[1,5] * Ang[1,6] * Sq[5,6])) - Nc * (s[1,5] - s[1,6] - s[5,6]) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Ang[1,3] * Ang[1,5] * Sq[1,6] * Sq[2,4]) / (Sq[1,5] * Ang[1,6]) - Nc * (s[2,5] - s[2,6] - s[5,6]) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Ang[1,3] * Ang[1,5] * Sq[1,6] 
		* Sq[2,4]) / (Sq[1,5] * Ang[1,6]))

MRRRLLL_3 = (alpha_s / (2 * pi))^2 * (vev/2 * C4) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* Cf * ( 4 * Cf * ((Ang[1,2] * Sq[2,4] * Ang[3,6]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) + (Ang[3,6] * Sq[4,5]) / (Sq[1,6] * Ang[2,5])) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,3] * Sq[1,5] * Ang[1,6] * Sq[2,4]) / (Ang[1,5] * Sq[1,6]) - (Ang[1,6] * Sq[2,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,5] * Sq[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Ang[1,3] * Sq[2,4] * Ang[2,6]) / (Ang[1,5] * Sq[1,6] * Sq[2,5]) + (s[1,2] * Ang[1,3] * Sq[4,5] * Ang[5,6]) / (Ang[1,5] * Sq[1,6] 
		* Sq[2,5]) + (s[1,2] * Ang[1,3] * Sq[2,4] * Sq[2,5]) / (Ang[1,5] * Sq[1,6] * Sq[2,6]) + (Ang[1,3] * Sq[1,5] * Sq[2,4] * Ang[2,6]) / (Sq[1,6] * Ang[2,5]) + (Ang[1,3] * Sq[1,5] * Sq[4,5] * Ang[5,6]) / (Sq[1,6] * Ang[2,5]) - (Sq[1,2] * Ang[1,3] * Sq[2,5] * Sq[4,5]) / (Sq[1,6] * Sq[2,6]) - (Sq[1,2] * Ang[1,3] * Ang[1,6] * Sq[2,5] * Sq[4,6]) / (Ang[1,5] * Sq[1,6] * Sq[2,6])) + 2 * Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,5] * Ang[1,6]**2 * Sq[2,4] * Ang[3,5]) / (Ang[1,5] * Sq[1,6] 
		* Ang[5,6]) + (Ang[1,6]**2 * Sq[2,4] * Ang[3,6]) / (Ang[1,5] * Ang[5,6]) - (Sq[1,5] * Ang[1,6] * Sq[2,4] * Ang[3,6]) / (Sq[1,6] * Ang[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2] * Ang[1,3] * Ang[1,6] * Sq[4,5]) / (Ang[1,5] * Sq[1,6]) - (Sq[1,2] * Ang[1,3] * Ang[1,6] * Sq[2,4] * Ang[2,6]) / (Ang[1,5] * Sq[1,6] * Ang[5,6]) + (Ang[1,2] * Ang[1,3] * Sq[1,5] * Sq[2,4] * Sq[2,5]) / (Ang[1,5] * Sq[1,6] * Sq[5,6]) + (Ang[1,3] * Sq[1,5] * Sq[2,5] * Sq[4,5]) / (Sq[1,6] * Sq[5,6])) 
		- Nc * (s[1,5] - s[1,6] - s[5,6]) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Ang[1,3] * Sq[1,5] * Ang[1,6] * Sq[2,4]) / (Ang[1,5] * Sq[1,6]) - Nc * (s[2,5] - s[2,6] - s[5,6]) / (2 * s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Ang[1,3] * Sq[1,5] * Ang[1,6] * Sq[2,4]) / (Ang[1,5] * Sq[1,6]))

MRRRRLL_3 = (alpha_s / (2 * pi))^2 * (vev/2 * C2) * gW^2 * mW * sqrt(2) * 1 / (s[1,2] - mW^2 + I * mW * Gamma_W) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) 
		* 2 * Cf * ( - 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2]**2 * Ang[1,3] * Sq[2,4] * Sq[2,6]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) + (Ang[1,2]**2 * Ang[1,3] * Sq[2,4] * Sq[2,5]) / (Ang[1,5] * Ang[1,6] * Ang[2,6]) + (Ang[1,2] * Ang[1,3] * Sq[2,6] * Sq[4,5]) / (Ang[1,6] * Ang[2,5]) + (Ang[1,2] * Ang[1,3] * Sq[2,5] * Sq[4,5]) / (Ang[1,6] * Ang[2,6]) + (Ang[1,2] * Ang[1,3] * Sq[2,6] * Sq[4,6]) / (Ang[1,5] * Ang[2,5]) + (Ang[1,2] * Ang[1,3] * Sq[2,5] * Sq[4,6]) / (Ang[1,5] * Ang[2,6]) 
		+ (Ang[1,2] * Ang[1,3] * Sq[2,4] * Sq[5,6]) / (Ang[1,5] * Ang[2,6]) - (Ang[1,2] * Ang[1,3] * Sq[2,4] * Sq[5,6]) / (Ang[1,6] * Ang[2,5]) + (Ang[1,3] * Sq[4,5] * Sq[5,6]) / (Ang[2,6]) - (Ang[1,3] * Sq[4,6] * Sq[5,6]) / (Ang[2,5]) + (Ang[1,3] * Ang[1,6] * Sq[4,6] * Sq[5,6]) / (Ang[1,5] * Ang[2,6]) - (Ang[1,3] * Ang[1,5] * Sq[4,5] * Sq[5,6]) / (Ang[1,6] * Ang[2,5])) + Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2] * Ang[1,3] * Sq[2,4] * Sq[2,5]) / (Ang[1,6] * Ang[5,6]) + (Ang[1,2] * Ang[1,3] 
		* Sq[2,4] * Sq[2,6]) / (Ang[1,5] * Ang[5,6]) + (Ang[1,3] * Sq[2,5] * Sq[4,6]) / (Ang[5,6]) + (Ang[1,3] * Sq[2,6] * Sq[4,5]) / (Ang[5,6]) + (Ang[1,3] * Sq[2,5] * Ang[1,5] * Sq[4,5]) / (Ang[1,6] * Ang[5,6]) + (Ang[1,3] * Ang[1,6] * Sq[2,6] * Sq[4,6]) / (Ang[1,5] * Ang[5,6])))

 
   
# 4-point amplitudes

MLRLLLL_4 = (alpha_s / (2 * pi))^2 * C1 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( Nc * ((Sq[1,2] * Sq[1,4] * Sq[2,4] * Ang[3,4] * Ang[2,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[1,2] * Sq[1,4] * Sq[2,4] * Ang[3,4] * Ang[2,6]) / (Sq[1,5] * Sq[5,6]) + (Sq[1,2] * Sq[1,4] * Ang[3,4] * Sq[4,5] * Ang[5,6]) / (Sq[1,5] * Sq[5,6]) - (Sq[1,2] * Sq[1,4] * Ang[3,4] * Sq[4,6] * Ang[5,6]) / (Sq[5,6] * Sq[1,6])) - 2 * Cf * ((Sq[1,2]**2 * Sq[1,4] * Ang[3,4] * Sq[4,5] * Ang[5,6]) / (Sq[1,5] * Sq[2,5] * Sq[1,6]) - (Sq[1,2]**2 * Sq[1,4] * Ang[3,4] 
* Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,2]**2 * Sq[1,4] * Sq[2,4] * Ang[3,4] * Ang[2,5]) / (Sq[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,2]**2 * Sq[1,4] * Sq[2,4] * Ang[3,4] * Ang[2,6]) / (Sq[1,5] * Sq[2,5] * Sq[1,6])))

MLRLRLL_4 = (alpha_s / (2 * pi))^2 * C1 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * 2 * 2 * Cf * ( 4 * Cf * (Sq[1,2] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,4] * Sq[2,4] * Ang[1,5] * Sq[1,6] * Ang[3,4]) / (Sq[1,5] * Ang[1,6]) - (Sq[1,6] * Sq[2,4] * Ang[3,4] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Ang[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Sq[1,4] * Sq[2,4] * Sq[2,6] * Ang[3,4]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) - (Sq[1,2] * Sq[1,4] * Ang[1,5] * Sq[2,6] * Ang[3,4] * Sq[4,5]) 
/ (Sq[1,5] * Ang[1,6] * Sq[2,5]) - (Sq[1,2] * Sq[1,4] * Sq[2,6] * Ang[3,4] * Sq[4,6]) / (Sq[1,5] * Sq[2,5])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Sq[1,4] * Sq[2,4] * Ang[2,5] * Ang[3,4]) / (Sq[1,5] * Ang[1,6] * Ang[2,6]) - (s[1,2] * Sq[1,4] * Ang[3,4] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Ang[1,6] * Ang[2,6]) - (Sq[1,4] * Sq[1,6] * Sq[2,4] * Ang[2,5] * Ang[3,4]) / (Sq[1,5] * Ang[2,6]) + (Sq[1,4] * Sq[1,6] * Ang[3,4] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Ang[2,6])) + 4 * Cf 
* 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,5] * Sq[1,6]**2 * Sq[2,4] * Ang[3,4] * Sq[4,5]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) + (Sq[1,6]**2 * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Sq[1,5] * Sq[5,6]) - (Ang[1,5] * Sq[1,6] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Ang[1,6] * Sq[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2] * Sq[1,4] * Ang[1,5] * Sq[2,4] * Ang[2,5] * Ang[3,4]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) + (Ang[1,2] * Sq[1,4] * Sq[1,6] * Sq[2,4] * Sq[2,6] * Ang[3,4]) / (Sq[1,5] 
* Ang[1,6] * Sq[5,6]) - (Sq[1,2] * Sq[1,4] * Ang[1,5] * Ang[3,4] * Sq[4,6]) / (Sq[1,5] * Ang[1,6]) - (Sq[1,4] * Sq[1,6] * Sq[2,6] * Ang[3,4] * Sq[4,6]) / (Sq[1,5] * Sq[5,6]) - (Sq[1,4] * Ang[1,5] * Sq[1,6] * Sq[2,6] * Ang[3,4] * Sq[4,5]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) - (Sq[1,4] * Ang[1,5] * Sq[1,6] * Sq[2,5] * Ang[3,4] * Sq[4,6]) / (Sq[1,5] * Ang[1,6] * Sq[5,6])) - Nc * (s[1,5] - s[1,6] - s[5,6]) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Sq[1,4] * Ang[1,5] * Sq[1,6] 
* Sq[2,4] * Ang[3,4]) / (Sq[1,5] * Ang[1,6]) - Nc * (s[2,5] - s[2,6] - s[5,6]) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Sq[1,4] * Ang[1,5] * Sq[1,6] * Sq[2,4] * Ang[3,4]) / (Sq[1,5] * Ang[1,6]))

MLRRLLL_4 = (alpha_s / (2 * pi))^2 * C1 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * 2 * Cf * ( - 4 * Cf * (Sq[1,2] * Sq[2,4] * Ang[3,4] * Sq[4,5]) / (Ang[1,5] * Sq[1,6] * Sq[2,6]) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,4] * Sq[1,5] * Ang[1,6] * Sq[2,4] * Ang[3,4]) / (Ang[1,5] * Sq[1,6]) + (Sq[1,5] * Sq[2,4] * Ang[3,4] * Sq[4,5] * Ang[5,6]) / (Ang[1,5] * Sq[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Sq[1,4] * Sq[2,4] * Ang[2,6] * Ang[3,4]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) + (s[1,2] * Sq[1,4] * Ang[3,4] * Sq[4,5] * Ang[5,6]) / (Ang[1,5] 
* Sq[1,6] * Ang[2,5]) + (s[1,2] * Sq[1,4] * Sq[2,4] * Sq[2,5] * Ang[3,4]) / (Ang[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,4] * Sq[1,5] * Sq[2,4] * Ang[2,6] * Ang[3,4]) / (Sq[1,6] * Ang[2,5]) + (Sq[1,4] * Sq[1,5] * Ang[3,4] * Sq[4,5] * Ang[5,6]) / (Sq[1,6] * Ang[2,5]) - (Sq[1,2] * Sq[1,4] * Sq[2,5] * Ang[3,4] * Sq[4,5]) / (Sq[1,6] * Sq[2,6]) - (Sq[1,2] * Sq[1,4] * Ang[1,6] * Sq[2,5] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Sq[1,6] * Sq[2,6])) + 2 * Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) 
* ((Sq[1,5]**2 * Sq[2,4] * Ang[3,4] * Sq[4,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[1,5]**2 * Ang[1,6] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Sq[1,6] * Sq[5,6]) - (Sq[1,5]**2 * Ang[1,6] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Sq[1,6] * Sq[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2] * Sq[1,4] * Sq[1,5] * Sq[2,4] * Sq[2,5] * Ang[3,4]) / (Ang[1,5] * Sq[1,6] * Sq[5,6]) - (Sq[1,4] * Sq[1,5] * Sq[2,5] * Ang[3,4] * Sq[4,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[1,2] * Sq[1,4] 
* Ang[1,6] * Sq[2,4] * Ang[2,6] * Ang[3,4]) / (Ang[1,5] * Sq[1,6] * Ang[5,6]) + (Sq[1,2] * Sq[1,4] * Ang[1,6] * Ang[3,4] * Sq[4,5]) / (Ang[1,5] * Sq[1,6])) - Nc * ((s[1,5] - s[1,6] - s[5,6])) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Sq[1,4] * Sq[1,5] * Ang[1,6] * Sq[2,4] * Ang[3,4]) / (Ang[1,5] * Sq[1,6]) - Nc * ((s[2,5] - s[2,6] - s[5,6])) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Sq[1,4] * Sq[1,5] * Ang[1,6] * Sq[2,4] * Ang[3,4]) / (Ang[1,5] * Sq[1,6]))

MLRRRLL_4 = (alpha_s / (2 * pi))^2 * C1 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * 4 * Cf * ( 2 * Cf * ((Ang[1,2] * Sq[2,4] * Ang[3,4] * Sq[4,5]) / (Ang[1,5] * Ang[1,6] * Ang[2,6]) + (Ang[1,2] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) + (Ang[3,4] * Sq[4,5] * Sq[4,6]) / (Ang[1,5] * Ang[2,6]) + (Ang[3,4] * Sq[4,5] * Sq[4,6]) / (Ang[1,6] * Ang[2,5])) + 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( - (Ang[1,2]**2 * Sq[1,4] * Sq[2,4] * Sq[2,6] * Ang[3,4]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) - (Ang[1,2]**2 * Sq[1,4] * Sq[2,4] * Sq[2,5] * Ang[3,4]) / (Ang[1,5] 
* Ang[1,6] * Ang[2,6]) - (Ang[1,2] * Sq[1,4] * Sq[2,6] * Ang[3,4] * Sq[4,5]) / (Ang[1,6] * Ang[2,5]) - (Ang[1,2] * Sq[1,4] * Sq[2,5] * Ang[3,4] * Sq[4,5]) / (Ang[1,6] * Ang[2,6]) - (Ang[1,2] * Sq[1,4] * Sq[2,6] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Ang[2,5]) - (Ang[1,2] * Sq[1,4] * Sq[2,5] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Ang[2,6]) + (Ang[1,2] * Sq[1,4] * Sq[2,4] * Ang[3,4] * Sq[5,6]) / (Ang[1,6] * Ang[2,5]) - (Ang[1,2] * Sq[1,4] * Sq[2,4] * Ang[3,4] * Sq[5,6]) / (Ang[1,5] * Ang[2,6]) 
+ (Sq[1,4] * Ang[1,5] * Ang[3,4] * Sq[4,5] * Sq[5,6]) / (Ang[1,6] * Ang[2,5]) - (Sq[1,4] * Ang[1,6] * Ang[3,4] * Sq[4,6] * Sq[5,6]) / (Ang[1,5] * Ang[2,6]) + (Sq[1,4] * Ang[3,4] * Sq[4,6] * Sq[5,6]) / (Ang[2,5]) - (Sq[1,4] * Ang[3,4] * Sq[4,5] * Sq[5,6]) / (Ang[2,6])) + Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,6] * Sq[2,4] * Ang[3,4] * Sq[4,5]) / (Ang[5,6]) + (Sq[1,5] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Ang[5,6]) + (s[1,6] * Sq[2,4] * Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Ang[5,6]) 
+ (s[1,5] * Sq[2,4] * Ang[3,4] * Sq[4,5]) / (Ang[1,6] * Ang[5,6])) + Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2] * Sq[1,4] * Sq[2,4] * Sq[2,5] * Ang[3,4]) / (Ang[1,6] * Ang[5,6]) + (Ang[1,2] * Sq[1,4] * Sq[2,4] * Sq[2,6] * Ang[3,4]) / (Ang[1,5] * Ang[5,6]) + (Sq[1,4] * Sq[2,5] * Ang[3,4] * Sq[4,6]) / (Ang[5,6]) + (Sq[1,4] * Sq[2,6] * Ang[3,4] * Sq[4,5]) / (Ang[5,6]) + (Sq[1,4] * Ang[1,5] * Sq[2,5] * Ang[3,4] * Sq[4,5]) / (Ang[1,6] * Ang[5,6]) + (Sq[1,4] * Ang[1,6] * Sq[2,6] 
* Ang[3,4] * Sq[4,6]) / (Ang[1,5] * Ang[5,6])))

MRLLLLL_4 = (alpha_s / (2 * pi))^2 * C2 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * 4 * Cf * ( - 2 * Cf * ((Sq[1,2] * Ang[2,3] * Sq[3,4] * Ang[3,5]) / (Sq[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,2] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Sq[1,5] * Sq[1,6] * Sq[2,5]) + (Sq[3,4] * Ang[3,5] * Ang[3,6]) / (Sq[1,5] * Sq[2,6]) + (Sq[3,4] * Ang[3,5] * Ang[3,6]) / (Sq[1,6] * Sq[2,5])) + 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2]**2 * Ang[1,3] * Ang[2,3] * Sq[3,4] * Ang[2,6]) / (Sq[1,5] * Sq[1,6] * Sq[2,5]) + (Sq[1,2]**2 * Ang[1,3] * Ang[2,3] * Sq[3,4] * Ang[2,5]) / (Sq[1,5] 
* Sq[1,6] * Sq[2,6]) + (Sq[1,2] * Ang[1,3] * Sq[3,4] * Ang[3,5] * Ang[2,6]) / (Sq[1,6] * Sq[2,5]) + (Sq[1,2] * Ang[1,3] * Sq[3,4] * Ang[2,5] * Ang[3,6]) / (Sq[1,5] * Sq[2,6]) + (Sq[1,2] * Ang[1,3] * Sq[3,4] * Ang[2,6] * Ang[3,6]) / (Sq[1,5] * Sq[2,5]) + (Sq[1,2] * Ang[1,3] * Sq[3,4] * Ang[2,5] * Ang[3,5]) / (Sq[1,6] * Sq[2,6]) - (Sq[1,2] * Ang[1,3] * Ang[2,3] * Sq[3,4] * Ang[5,6]) / (Sq[1,6] * Sq[2,5]) + (Sq[1,2] * Ang[1,3] * Ang[2,3] * Sq[3,4] * Ang[5,6]) / (Sq[1,5] * Sq[2,6]) 
- (Ang[1,3] * Sq[1,5] * Sq[3,4] * Ang[3,5] * Ang[5,6]) / (Sq[1,6] * Sq[2,5]) - (Ang[1,3] * Sq[1,6] * Sq[3,4] * Ang[3,6] * Ang[5,6]) / (Sq[1,5] * Sq[2,6]) - (Ang[1,3] * Sq[3,4] * Ang[3,6] * Ang[5,6]) / (Sq[2,5]) + (Ang[1,3] * Sq[3,4] * Ang[3,5] * Ang[5,6]) / (Sq[2,6])) - Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[2,3] * Ang[1,6] * Sq[3,4] * Ang[3,5]) / (Sq[5,6]) + (Ang[2,3] * Ang[1,5] * Sq[3,4] * Ang[3,6]) / (Sq[5,6]) + (s[1,6] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Sq[1,5] * Sq[5,6]) 
+ (s[1,5] * Ang[2,3] * Sq[3,4] * Ang[3,5]) / (Sq[1,6] * Sq[5,6])) - Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2] * Ang[1,3] * Ang[2,3] * Sq[3,4] * Ang[2,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[1,2] * Ang[1,3] * Ang[2,3] * Sq[3,4] * Ang[2,6]) / (Sq[1,5] * Sq[5,6]) + (Ang[1,3] * Sq[3,4] * Sq[1,5] * Ang[2,5] * Ang[3,5]) / (Sq[1,6] * Sq[5,6]) + (Ang[1,3] * Sq[3,4] * Sq[1,6] * Ang[2,6] * Ang[3,6]) / (Sq[1,5] * Sq[5,6]) + (Ang[1,3] * Sq[3,4] * Ang[2,5] * Ang[3,6]) / (Sq[5,6]) + (Ang[1,3] 
* Sq[3,4] * Ang[2,6] * Ang[3,5]) / (Sq[5,6])))

MRLLRLL_4 = (alpha_s / (2 * pi))^2 * C2 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * 2 * Cf * ( - 4 * Cf * ((Ang[1,2] * Ang[2,3] * Sq[3,4] * Ang[3,5]) / (Sq[1,5] * Ang[1,6] * Ang[2,6]) + (Sq[1,2] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (Sq[3,4] * Ang[3,5] * Ang[3,6]) / (Ang[1,6] * Sq[2,5])) - 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,3] * Ang[2,3] * Ang[1,5] * Sq[1,6] * Sq[3,4]) / (Sq[1,5] * Ang[1,6]) + (Ang[1,5] * Ang[2,3] * Sq[3,4] * Ang[3,5] * Sq[5,6]) / (Sq[1,5] * Ang[1,6])) - 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] 
* Ang[1,3] * Ang[2,3] * Sq[3,4] * Sq[2,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (s[1,2] * Ang[1,3] * Ang[3,5] * Sq[3,4] * Sq[5,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) - (s[1,2] * Ang[1,3] * Ang[2,3] * Ang[2,5] * Sq[3,4]) / (Sq[1,5] * Ang[1,6] * Ang[2,6]) + (s[1,5] * Ang[1,3] * Ang[2,3] * Sq[3,4] * Sq[2,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) - (s[1,5] * Ang[1,3] * Ang[3,5] * Sq[3,4] * Sq[5,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (Ang[1,2] * Ang[2,5] * Ang[1,3] * Ang[3,5] * Sq[3,4]) 
/ (Ang[1,6] * Ang[2,6]) + (Ang[1,2] * Ang[2,5] * Sq[1,6] * Ang[1,3] * Ang[3,6] * Sq[3,4]) / (Sq[1,5] * Ang[1,6] * Ang[2,6])) - 2 * Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,5]**2 * Ang[2,3] * Ang[3,5] * Sq[3,4]) / (Ang[1,6] * Ang[5,6]) + (Ang[1,5]**2 * Sq[1,6] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) - (Ang[1,5]**2 * Sq[1,6] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Sq[1,5] * Ang[1,6] * Ang[5,6])) - 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2] * Ang[1,3] * Ang[1,5] 
* Ang[2,3] * Ang[2,5] * Sq[3,4]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) + (Ang[1,3] * Ang[1,5] * Ang[2,5] * Sq[3,4] * Ang[3,5]) / (Ang[1,6] * Ang[5,6]) + (Ang[1,2] * Ang[1,3] * Sq[1,6] * Ang[2,3] * Sq[2,6] * Sq[3,4]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) + (Ang[1,2] * Ang[1,3] * Sq[1,6] * Sq[3,4] * Ang[3,5] * Sq[5,6]) / (Sq[1,5] * Ang[1,6] * Sq[5,6])) + Nc * ((s[1,5] - s[1,6] - s[5,6])) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Ang[1,3] * Ang[1,5] * Sq[1,6] * Ang[2,3] * Sq[3,4]) / (Sq[1,5] 
* Ang[1,6]) + Nc * ((s[2,5] - s[2,6] - s[5,6])) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Ang[1,3] * Ang[1,5] * Sq[1,6] * Ang[2,3] * Sq[3,4]) / (Sq[1,5] * Ang[1,6]))

MRLRLLL_4 = (alpha_s / (2 * pi))^2 * C2 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * 2 * Cf * ( - 4 * Cf * (Ang[1,2] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,6] * Ang[2,3] * Sq[3,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,5] * Sq[1,6]) - (Ang[1,3] * Sq[1,5] * Ang[1,6] * Ang[2,3] * Sq[3,4]) / (Ang[1,5] * Sq[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( - (s[1,2] * Ang[1,3] * Ang[2,3] * Ang[2,6] * Sq[3,4]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) - (s[1,2] * Ang[1,3] * Ang[2,3] * Sq[2,5] * Sq[3,4]) 
/ (Ang[1,5] * Sq[1,6] * Sq[2,6]) - (s[1,2] * Ang[1,3] * Sq[3,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,5] * Sq[1,6] * Sq[2,6]) + (Ang[1,2] * Ang[1,3] * Sq[1,5] * Ang[2,6] * Sq[3,4] * Ang[3,5]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) + (Ang[1,2] * Ang[1,3] * Sq[1,6] * Ang[2,6] * Sq[3,4] * Ang[3,6]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) - (Ang[1,3] * Ang[1,6] * Ang[2,3] * Sq[2,5] * Sq[3,4]) / (Ang[1,5] * Sq[2,6]) + (Ang[1,3] * Ang[1,6] * Sq[3,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,5] * Sq[2,6])) + 2 * Nc * 1 
/ (s[1,5] + s[1,6] + s[5,6]) * ( - (Sq[1,5] * Ang[1,6]**2 * Ang[2,3] * Sq[3,4] * Ang[3,5]) / (Ang[1,5] * Sq[1,6] * Ang[5,6]) - (Ang[1,6]**2 * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Ang[1,5] * Ang[5,6]) + (Sq[1,5] * Ang[1,6] * Ang[2,3] * Sq[3,4] * Ang[3,6]) / (Sq[1,6] * Ang[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( - (Ang[1,2] * Ang[1,3] * Sq[1,5] * Ang[2,3] * Sq[2,5] * Sq[3,4]) / (Ang[1,5] * Sq[1,6] * Sq[5,6]) - (Sq[1,2] * Ang[1,3] * Ang[1,6] * Ang[2,3] * Ang[2,6] * Sq[3,4]) / (Ang[1,5] 
* Sq[1,6] * Ang[5,6]) + (Ang[1,2] * Ang[1,3] * Sq[1,5] * Sq[3,4] * Ang[3,6]) / (Ang[1,5] * Sq[1,6]) + (Ang[1,3] * Ang[1,6] * Sq[1,5] * Ang[2,5] * Sq[3,4] * Ang[3,6]) / (Ang[1,5] * Sq[1,6] * Ang[5,6]) - (Ang[1,3] * Sq[1,5] * Ang[1,6] * Ang[2,6] * Sq[3,4] * Ang[3,5]) / (Ang[1,5] * Sq[1,6] * Ang[5,6]) - (Ang[1,3] * Ang[1,6] * Ang[2,6] * Sq[3,4] * Ang[3,6]) / (Ang[1,5] * Ang[5,6])) + Nc * (s[1,5] - s[1,6] - s[5,6]) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Ang[1,3] * Sq[1,5] * Ang[1,6] 
* Ang[2,3] * Sq[3,4]) / (Ang[1,5] * Sq[1,6]) + Nc * (s[2,5] - s[2,6] - s[5,6]) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Ang[1,3] * Sq[1,5] * Ang[1,6] * Ang[2,3] * Sq[3,4]) / (Ang[1,5] * Sq[1,6]))

MRLRRLL_4 = (alpha_s / (2 * pi))^2 * C2 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * 4 * Cf * ( 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2]**2 * Ang[1,3] * Ang[2,3] * Sq[2,6] * Sq[3,4]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) + (Ang[1,2]**2 * Ang[1,3] * Ang[2,3] * Sq[2,5] * Sq[3,4]) / (Ang[1,5] * Ang[1,6] * Ang[2,6]) + (Ang[1,2]**2 * Ang[1,3] * Sq[3,4] * Ang[3,5] * Sq[5,6]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) - (Ang[1,2]**2 * Ang[1,3] * Ang[2,3] * Sq[2,5] * Sq[3,4]) / (Ang[1,5] * Ang[1,6] * Ang[2,6])) + Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( - (Ang[1,2] * Ang[1,3] * Ang[2,3] 
* Sq[2,5] * Sq[3,4]) / (Ang[1,6] * Ang[5,6]) - (Ang[1,2] * Ang[1,3] * Ang[2,3] * Sq[2,6] * Sq[3,4]) / (Ang[1,5] * Ang[5,6]) + (Ang[1,2] * Ang[1,3] * Sq[3,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,6] * Ang[5,6]) - (Ang[1,2] * Ang[1,3] * Sq[3,4] * Ang[3,5] * Sq[5,6]) / (Ang[1,5] * Ang[5,6])))

MLLLLLL_4 = (alpha_s / (2 * pi))^2 * C3 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( 2 * Cf * ((Sq[1,2]**2 * Sq[1,4] * Ang[2,3] * Ang[2,6]) / (Sq[1,5] * Sq[1,6] * Sq[2,5]) + (Sq[1,2]**2 * Sq[1,4] * Ang[2,3] * Ang[2,5]) / (Sq[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,2] * Sq[1,4] * Ang[2,6] * Ang[3,5]) / (Sq[1,6] * Sq[2,5]) + (Sq[1,2] * Sq[1,4] * Ang[2,5] * Ang[3,5]) / (Sq[1,6] * Sq[2,6]) + (Sq[1,2] * Sq[1,4] * Ang[2,6] * Ang[3,6]) / (Sq[1,5] * Sq[2,5]) + (Sq[1,2] * Sq[1,4] * Ang[2,5] * Ang[3,6]) / (Sq[1,5] * Sq[2,6]) + (Sq[1,2] 
* Ang[2,3] * Sq[1,4] * Ang[5,6]) / (Sq[1,5] * Sq[2,6]) - (Sq[1,2] * Ang[2,3] * Sq[1,4] * Ang[5,6]) / (Sq[1,6] * Sq[2,5]) + (Sq[1,4] * Sq[1,6] * Ang[3,6] * Ang[5,6]) / (Sq[1,5] * Sq[2,6]) - (Sq[1,4] * Sq[1,5] * Ang[3,5] * Ang[5,6]) / (Sq[1,6] * Sq[2,5]) + (Sq[1,4] * Ang[3,5] * Ang[5,6]) / (Sq[2,6]) - (Sq[1,4] * Ang[3,6] * Ang[5,6]) / (Sq[2,5])) + Nc * ((Sq[1,2] * Ang[2,3] * Sq[1,4] * Ang[2,5] * Ang[5,6]) / (Sq[1,6] * Sq[5,6]) - (Sq[1,2] * Ang[2,3] * Sq[1,4] * Ang[2,6] * Ang[5,6]) 
/ (Sq[1,5] * Sq[5,6]) + (Sq[1,4] * Sq[1,5] * Ang[2,5] * Ang[3,5] * Ang[5,6]) / (Sq[1,6] * Sq[5,6]) - (Sq[1,4] * Sq[1,6] * Ang[2,6] * Ang[3,6] * Ang[5,6]) / (Sq[1,5] * Sq[5,6]) + (Sq[1,4] * Ang[2,5] * Ang[3,6] * Ang[5,6]) / (Sq[5,6]) - (Sq[1,4] * Ang[2,6] * Ang[3,5] * Ang[5,6]) / (Sq[5,6])))

MLLLRLL_4 = (alpha_s / (2 * pi))^2 * C3 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * Cf * ( 4 * Cf * ((Sq[1,2] * Ang[2,3] * Sq[4,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (Ang[3,5] * Sq[4,6]) / (Ang[1,6] * Sq[2,5])) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,4] * Ang[1,5] * Sq[1,6] * Ang[2,3]) / (Sq[1,5] * Ang[1,6]) - (Sq[1,6] * Ang[2,3] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Ang[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Sq[1,4] * Ang[2,3] * Sq[2,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (s[1,2] * Sq[1,4] * Ang[3,5] * Sq[5,6]) / (Sq[1,5] * Ang[1,6] 
* Sq[2,5]) + (s[1,2] * Sq[1,4] * Ang[2,3] * Sq[2,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (Sq[1,4] * Ang[1,5] * Ang[2,3] * Sq[2,6]) / (Ang[1,6] * Sq[2,5]) + (Sq[1,4] * Ang[1,5] * Ang[3,5] * Sq[5,6]) / (Ang[1,6] * Sq[2,5]) - (Ang[1,2] * Sq[1,4] * Sq[2,6] * Ang[3,5]) / (Ang[1,6] * Sq[2,5]) - (Ang[1,2] * Sq[1,4] * Sq[1,6] * Sq[2,6] * Ang[3,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5])) + 2 * Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,5] * Sq[1,6] * Ang[2,3] * Sq[4,6] * Ang[5,6]) / (Ang[1,6] 
* Sq[5,6]) - (Sq[1,6]**2 * Ang[2,3] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Sq[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2] * Sq[1,4] * Ang[1,5] * Ang[2,3] * Ang[2,5]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) + (Sq[1,4] * Ang[1,5] * Ang[2,5] * Ang[3,5]) / (Ang[1,6] * Ang[5,6]) + (Ang[2,5] * Sq[1,6] * Ang[1,5] * Ang[3,6] * Sq[1,4]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) - (Ang[2,5] * Sq[1,6] * Ang[1,5] * Ang[3,6] * Sq[1,4]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) + (Ang[1,2] * Sq[1,4] * Sq[1,6] 
* Sq[2,6] * Ang[2,3]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) + (Ang[1,2] * Sq[1,6] * Ang[3,5] * Sq[1,4]) / (Sq[1,5] * Ang[1,6])) - Nc * ((s[1,5] - s[1,6] - s[5,6])) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Sq[1,4] * Ang[1,5] * Sq[1,6] * Ang[2,3]) / (Sq[1,5] * Ang[1,6]) - Nc * ((s[2,5] - s[2,6] - s[5,6])) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Sq[1,4] * Ang[1,5] * Sq[1,6] * Ang[2,3]) / (Sq[1,5] * Ang[1,6]))

MLLRLLL_4 = (alpha_s / (2 * pi))^2 * C3 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * Cf * ( 4 * Cf * ((Sq[1,2] * Ang[2,3] * Sq[4,5]) / (Ang[1,5] * Sq[1,6] * Sq[2,6]) + (Ang[3,6] * Sq[4,5]) / (Ang[1,5] * Sq[2,6])) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,4] * Sq[1,5] * Ang[1,6] * Ang[2,3]) / (Ang[1,5] * Sq[1,6]) + (Sq[1,5] * Ang[2,3] * Sq[4,5] * Ang[5,6]) / (Ang[1,5] * Sq[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Sq[1,4] * Ang[2,3] * Ang[2,6]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) + (s[1,2] * Sq[1,4] * Ang[2,3] * Sq[2,5]) / (Ang[1,5] * Sq[1,6] 
* Sq[2,6]) - (s[1,2] * Sq[1,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,5] * Sq[1,6] * Sq[2,6]) - (Ang[1,2] * Sq[1,4] * Sq[1,5] * Ang[2,6] * Ang[3,5]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) - (Ang[1,2] * Sq[1,4] * Ang[2,6] * Ang[3,6]) / (Ang[1,5] * Ang[2,5]) + (Sq[1,4] * Ang[1,6] * Ang[2,3] * Sq[2,5]) / (Ang[1,5] * Sq[2,6]) - (Sq[1,4] * Ang[1,6] * Ang[3,6] * Sq[5,6]) / (Ang[1,5] * Sq[2,6])) + 2 * Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,5]**2 * Ang[2,3] * Sq[4,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[1,5]**2 
* Ang[1,6] * Ang[2,3] * Sq[4,6]) / (Ang[1,5] * Sq[1,6] * Sq[5,6]) - (Sq[1,5]**2 * Ang[1,6] * Ang[2,3] * Sq[4,6]) / (Ang[1,5] * Sq[1,6] * Sq[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2] * Sq[1,5] * Sq[2,5] * Ang[2,3] * Sq[1,4]) / (Ang[1,5] * Sq[1,6] * Sq[5,6]) + (Ang[1,2] * Sq[1,4] * Sq[1,5] * Ang[3,6]) / (Ang[1,5] * Sq[1,6]) + (Sq[1,2] * Sq[1,4] * Ang[1,6] * Ang[2,3] * Ang[2,6]) / (Ang[1,5] * Sq[1,6] * Ang[5,6]) + (Sq[1,4] * Sq[1,5] * Ang[1,6] * Ang[2,6] * Ang[3,5]) 
/ (Ang[1,5] * Sq[1,6] * Ang[5,6]) + (Sq[1,4] * Ang[1,6] * Ang[2,6] * Ang[3,6]) / (Ang[1,5] * Ang[5,6]) - (Sq[1,4] * Sq[1,5] * Ang[1,6] * Ang[2,5] * Ang[3,6]) / (Ang[1,5] * Sq[1,6] * Ang[5,6])) - Nc * (s[1,5] - s[1,6] - s[5,6]) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Sq[1,4] * Sq[1,5] * Ang[1,6] * Ang[2,3]) / (Ang[1,5] * Sq[1,6]) - Nc * (s[2,5] - s[2,6] - s[5,6]) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Sq[1,4] * Sq[1,5] * Ang[1,6] * Ang[2,3]) / (Ang[1,5] * Sq[1,6]))

MLLRRLL_4 = (alpha_s / (2 * pi))^2 * C3 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * 2 * Cf * ( 2 * Cf * ((Ang[1,2] * Ang[2,3] * Sq[4,5]) / (Ang[1,5] * Ang[1,6] * Ang[2,6]) + (Ang[1,2] * Ang[2,3] * Sq[4,6]) / (Ang[1,5] * Ang[1,6] * Ang[2,5])) + 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( - (Ang[1,2]**2 * Sq[1,4] * Ang[2,3] * Sq[2,6]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) - (Ang[1,2]**2 * Sq[1,4] * Ang[2,3] * Sq[2,5]) / (Ang[1,5] * Ang[1,6] * Ang[2,6]) - (Ang[1,2]**2 * Sq[1,4] * Ang[3,5] * Sq[5,6]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) + (Ang[1,2]**2 * Sq[1,4] * Ang[3,6] * Sq[5,6]) 
/ (Ang[1,5] * Ang[1,6] * Ang[2,6])) + Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,6] * Ang[2,3] * Sq[4,5]) / (Ang[1,6] * Ang[5,6]) + (Sq[1,5] * Ang[2,3] * Sq[4,6]) / (Ang[5,6]) + (s[1,6] * Ang[2,3] * Sq[4,6]) / (Ang[1,5] * Ang[5,6]) + (s[1,5] * Ang[2,3] * Sq[4,5]) / (Ang[1,6] * Ang[5,6])) + Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2] * Sq[1,4] * Ang[2,3] * Sq[2,5]) / (Ang[1,6] * Ang[5,6]) + (Ang[1,2] * Sq[1,4] * Ang[2,3] * Sq[2,6]) / (Ang[1,5] * Ang[5,6]) + (Ang[1,2] * Sq[1,4] 
* Ang[3,5] * Sq[5,6]) / (Ang[1,5] * Ang[5,6]) - (Ang[1,2] * Sq[1,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,6] * Ang[5,6])))

MRRLLLL_4 = (alpha_s / (2 * pi))^2 * C4 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * 2 * Cf * ( 2 * Cf * ((Sq[1,2] * Sq[2,4] * Ang[3,5]) / (Sq[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,2] * Sq[2,4] * Ang[3,6]) / (Sq[1,5] * Sq[1,6] * Sq[2,5])) - 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2]**2 * Ang[1,3] * Sq[2,4] * Ang[2,6]) / (Sq[1,5] * Sq[2,5] * Sq[1,6]) + (Sq[1,2]**2 * Ang[1,3] * Sq[2,4] * Ang[2,5]) / (Sq[1,5] * Sq[1,6] * Sq[2,6]) + (Sq[1,2]**2 * Ang[1,3] * Sq[4,5] * Ang[5,6]) / (Sq[1,5] * Sq[2,5] * Sq[1,6]) - (Sq[1,2]**2 * Ang[1,3] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] 
* Sq[1,6] * Sq[2,6])) + Nc * (s[1,5] + s[1,6]) / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[2,4] * Ang[3,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[2,4] * Ang[3,6]) / (Sq[1,5] * Sq[5,6])) + Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2] * Ang[1,3] * Sq[2,4] * Ang[2,5]) / (Sq[1,6] * Sq[5,6]) + (Sq[1,2] * Ang[1,3] * Sq[2,4] * Ang[2,6]) / (Sq[1,5] * Sq[5,6]) + (Sq[1,2] * Ang[1,3] * Sq[4,5] * Ang[5,6]) / (Sq[1,5] * Sq[5,6]) - (Sq[1,2] * Ang[1,3] * Sq[4,6] * Ang[5,6]) / (Sq[1,6] * Sq[5,6])))

MRRLRLL_4 = (alpha_s / (2 * pi))^2 * C4 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * Cf * ( 4 * Cf * ((Ang[1,2] * Sq[2,4] * Sq[2,6] * Ang[3,5]) / (Sq[1,5] * Ang[1,6] * Ang[2,6]) + (Sq[2,6] * Ang[3,5] * Sq[4,6]) / (Sq[1,5] * Ang[2,6])) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,3] * Ang[1,5] * Sq[1,6] * Sq[2,4]) / (Sq[1,5] * Ang[1,6]) + (Ang[1,5] * Sq[2,4] * Ang[3,5] * Sq[5,6]) / (Sq[1,5] * Ang[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Ang[1,3] * Sq[2,4] * Sq[2,6]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) + (s[1,2] * Ang[1,3] * Sq[2,4] * Ang[2,5]) 
/ (Sq[1,5] * Ang[1,6] * Ang[2,6]) - (s[1,2] * Ang[1,3] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Ang[1,6] * Ang[2,6]) - (Sq[1,2] * Ang[1,3] * Ang[1,5] * Sq[2,6] * Sq[4,5]) / (Sq[1,5] * Ang[1,6] * Sq[2,5]) - (Sq[1,2] * Ang[1,3] * Sq[2,6] * Sq[4,6]) / (Sq[1,5] * Sq[2,5]) + (Ang[1,3] * Sq[1,6] * Sq[2,4] * Ang[2,5]) / (Sq[1,5] * Ang[2,6]) - (Ang[1,3] * Sq[1,6] * Sq[4,6] * Ang[5,6]) / (Sq[1,5] * Ang[2,6])) + 2 * Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,5]**2 * Sq[2,4] * Ang[3,5]) / (Ang[1,6] 
* Ang[5,6]) + (Ang[1,5]**2 * Sq[1,6] * Sq[2,4] * Ang[3,6]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) - (Ang[1,5]**2 * Sq[1,6] * Sq[2,4] * Ang[3,6]) / (Sq[1,5] * Ang[1,6] * Ang[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ( - (Sq[1,2] * Ang[1,3] * Ang[1,5] * Sq[2,4] * Ang[2,5]) / (Sq[1,5] * Ang[1,6] * Ang[5,6]) + (Sq[1,2] * Ang[1,3] * Ang[1,5] * Sq[4,6]) / (Sq[1,5] * Ang[1,6]) + (Ang[1,2] * Ang[1,3] * Sq[1,6] * Sq[2,4] * Sq[2,6]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) + (Ang[1,3] * Ang[1,5] * Sq[1,6] 
* Sq[2,6] * Sq[4,5]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) + (Ang[1,3] * Ang[1,6] * Sq[1,6] * Sq[2,6] * Sq[4,6]) / (Sq[1,5] * Ang[1,6] * Sq[5,6]) - (Ang[1,3] * Ang[1,5] * Sq[1,6] * Sq[2,5] * Sq[4,6]) / (Sq[1,5] * Ang[1,6] * Sq[5,6])) - Nc * (s[1,5] - s[1,6] - s[5,6]) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Ang[1,3] * Ang[1,5] * Sq[1,6] * Sq[2,4]) / (Sq[1,5] * Ang[1,6]) - Nc * (s[2,5] - s[2,6] - s[5,6]) / (s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Ang[1,3] * Ang[1,5] * Sq[1,6] 
* Sq[2,4]) / (Sq[1,5] * Ang[1,6]))

MRRRLLL_4 = (alpha_s / (2 * pi))^2 * C4 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * Cf * ( 4 * Cf * ((Ang[1,2] * Sq[2,4] * Ang[3,6]) / (Ang[1,5] * Sq[1,6] * Ang[2,5]) + (Ang[3,6] * Sq[4,5]) / (Sq[1,6] * Ang[2,5])) + 4 * Cf * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Ang[1,3] * Sq[1,5] * Ang[1,6] * Sq[2,4]) / (Ang[1,5] * Sq[1,6]) - (Ang[1,6] * Sq[2,4] * Ang[3,6] * Sq[5,6]) / (Ang[1,5] * Sq[1,6])) + 4 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((s[1,2] * Ang[1,3] * Sq[2,4] * Ang[2,6]) / (Ang[1,5] * Sq[1,6] * Sq[2,5]) + (s[1,2] * Ang[1,3] * Sq[4,5] * Ang[5,6]) / (Ang[1,5] * Sq[1,6] 
* Sq[2,5]) + (s[1,2] * Ang[1,3] * Sq[2,4] * Sq[2,5]) / (Ang[1,5] * Sq[1,6] * Sq[2,6]) + (Ang[1,3] * Sq[1,5] * Sq[2,4] * Ang[2,6]) / (Sq[1,6] * Ang[2,5]) + (Ang[1,3] * Sq[1,5] * Sq[4,5] * Ang[5,6]) / (Sq[1,6] * Ang[2,5]) - (Sq[1,2] * Ang[1,3] * Sq[2,5] * Sq[4,5]) / (Sq[1,6] * Sq[2,6]) - (Sq[1,2] * Ang[1,3] * Ang[1,6] * Sq[2,5] * Sq[4,6]) / (Ang[1,5] * Sq[1,6] * Sq[2,6])) + 2 * Nc * 1 / (s[1,5] + s[1,6] + s[5,6]) * ((Sq[1,5] * Ang[1,6]**2 * Sq[2,4] * Ang[3,5]) / (Ang[1,5] * Sq[1,6] 
* Ang[5,6]) + (Ang[1,6]**2 * Sq[2,4] * Ang[3,6]) / (Ang[1,5] * Ang[5,6]) - (Sq[1,5] * Ang[1,6] * Sq[2,4] * Ang[3,6]) / (Sq[1,6] * Ang[5,6])) + 2 * Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Sq[1,2] * Ang[1,3] * Ang[1,6] * Sq[4,5]) / (Ang[1,5] * Sq[1,6]) - (Sq[1,2] * Ang[1,3] * Ang[1,6] * Sq[2,4] * Ang[2,6]) / (Ang[1,5] * Sq[1,6] * Ang[5,6]) + (Ang[1,2] * Ang[1,3] * Sq[1,5] * Sq[2,4] * Sq[2,5]) / (Ang[1,5] * Sq[1,6] * Sq[5,6]) + (Ang[1,3] * Sq[1,5] * Sq[2,5] * Sq[4,5]) / (Sq[1,6] * Sq[5,6])) 
- Nc * (s[1,5] - s[1,6] - s[5,6]) / (s[5,6] * (s[1,5] + s[1,6] + s[5,6])) * (Ang[1,3] * Sq[1,5] * Ang[1,6] * Sq[2,4]) / (Ang[1,5] * Sq[1,6]) - Nc * (s[2,5] - s[2,6] - s[5,6]) / (2 * s[5,6] * (s[2,5] + s[2,6] + s[5,6])) * (Ang[1,3] * Sq[1,5] * Ang[1,6] * Sq[2,4]) / (Ang[1,5] * Sq[1,6]))

MRRRRLL_4 = (alpha_s / (2 * pi))^2 * C4 * gW * sqrt(2) * 1 / (s[3,4] - mW^2 + I * mW * Gamma_W) * 2 * Cf * ( - 2 * Cf * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2]**2 * Ang[1,3] * Sq[2,4] * Sq[2,6]) / (Ang[1,5] * Ang[1,6] * Ang[2,5]) + (Ang[1,2]**2 * Ang[1,3] * Sq[2,4] * Sq[2,5]) / (Ang[1,5] * Ang[1,6] * Ang[2,6]) + (Ang[1,2] * Ang[1,3] * Sq[2,6] * Sq[4,5]) / (Ang[1,6] * Ang[2,5]) + (Ang[1,2] * Ang[1,3] * Sq[2,5] * Sq[4,5]) / (Ang[1,6] * Ang[2,6]) + (Ang[1,2] * Ang[1,3] * Sq[2,6] * Sq[4,6]) / (Ang[1,5] * Ang[2,5]) + (Ang[1,2] * Ang[1,3] * Sq[2,5] * Sq[4,6]) / (Ang[1,5] * Ang[2,6]) 
+ (Ang[1,2] * Ang[1,3] * Sq[2,4] * Sq[5,6]) / (Ang[1,5] * Ang[2,6]) - (Ang[1,2] * Ang[1,3] * Sq[2,4] * Sq[5,6]) / (Ang[1,6] * Ang[2,5]) + (Ang[1,3] * Sq[4,5] * Sq[5,6]) / (Ang[2,6]) - (Ang[1,3] * Sq[4,6] * Sq[5,6]) / (Ang[2,5]) + (Ang[1,3] * Ang[1,6] * Sq[4,6] * Sq[5,6]) / (Ang[1,5] * Ang[2,6]) - (Ang[1,3] * Ang[1,5] * Sq[4,5] * Sq[5,6]) / (Ang[1,6] * Ang[2,5])) + Nc * 1 / (s[2,5] + s[2,6] + s[5,6]) * ((Ang[1,2] * Ang[1,3] * Sq[2,4] * Sq[2,5]) / (Ang[1,6] * Ang[5,6]) + (Ang[1,2] * Ang[1,3] 
* Sq[2,4] * Sq[2,6]) / (Ang[1,5] * Ang[5,6]) + (Ang[1,3] * Sq[2,5] * Sq[4,6]) / (Ang[5,6]) + (Ang[1,3] * Sq[2,6] * Sq[4,5]) / (Ang[5,6]) + (Ang[1,3] * Sq[2,5] * Ang[1,5] * Sq[4,5]) / (Ang[1,6] * Ang[5,6]) + (Ang[1,3] * Ang[1,6] * Sq[2,6] * Sq[4,6]) / (Ang[1,5] * Ang[5,6])))












