VIRTUAL-REAL HELICITY AMPLITUDES

<!-- Helicities: quark - antiquark - gluon - lepton - antilepton -->

--------------------------------------------------------------------------------------


M4_LRLLL = 1 / sqrt2 * C1 * af * gw * Q4 * ta / (pV^2 - mV^2) * ( 4 * A12 * square(p1, p2) * square(p1, p4) * square(p2, p4) * angle(p3, p4) * angle(p1, p5) * angle(p2, p5) + ( s15 * A13 - A16 ) * square(p1, p2) * angle(p2, p5) * (square(p1, p2) * angle(p1, p3) * square(p3, p4) * angle(p3, p5) + square(p1, p4) * square(p2, p4) * angle(p5, p1) * angle(p3, p4) ) + ( s15 * A14 - A17 ) * square(p2, p1) * square(p2, p4)^2 * angle(p2, p5)^2 * angle(p3, p4) + ( s15 * A15 - A18 ) * s25 * square(p2, p1) * angle(p3, p5)^2 * square(p3, p4) + A19 * square(p1, p2) * angle(p3, p5)^2 * square(p3, p4) + A20 * square(p1, p2) * square(p1, p4)^2 * angle(p1, p5)^2 * angle(p3, p4) + A21 * square(p2, p1) * angle(p1, p5) * ( square(p1, p2) * angle(p3, p2) * angle(p3, p5) * square(p3, p4) + square(p1, p4) * square(p2, p4) * angle(p3, p4) * angle(p2, p5) ) + A22 * square(p2, p1) * square(p1, p4) * square(p2, p4) * angle(p1, p5) * angle(p2, p5) * angle(p3, p4) + A23 * square(p1, p2) * square(p2, p4)^2 * angle(p2, p5) * angle(p3, p4) )


M4_RLLLL = 1 / sqrt2 * C2 * af * gw * Q4 * ta / (pV^2 - mV^2) * ( 8 * A8 * angle(p2, p3) * square(p3, p4) * angle(p3, p5) * angle(p1, p5) + 4 * A9 * angle(p1, p3) * angle(p2, p5) * square(p3, p4) * angle(p3, p5) + 2 * A10 * angle(p1, p5) * angle(p2, p5) * ( s1V * angle(p3, p5) * square(p4, p5) * - s5v * angle(p1, p3) * square(p1, p4) ) + 2 * A11 * angle(p1, p5) * angle(p2, p5) * ( s2V * angle(p3, p5) * square(p4, p5) - s5v * angle(p2, p3) * square(p2, p4) ) + 2 * A12 * square(p1, p2) * angle(p1, p3) * angle(p2, p3) * square(p4, p3) * angle(p1, p5) * angle(p2, p5) + A13 * angle(p1, p5)^2 * angle(p2, p5) * square(p1, p2) * (angle(p3, p1) * angle(p2, p3) * square(p1, p5) * square(p3, p4) + square(p1, p4) * square(p4, p5) * angle(p4, p3) * angle(p1, p2) ) + A14 * s25 * square(p1, p2) * angle(p2, p3)^2 * square(p3, p4) * angle(p1, p5)^2 + A15 * square(p1, p2) * angle(p1, p5)^2 * angle(p2, p5)^2 * angle(p4, p3) * square(p4, p5)^2 + A16 * square(p1, p4) * angle(p2, p3) * angle(p5, p1) * angle(p2, p5) * ( angle(p3, p1) * square(p2, p3) + angle(p1, p4) * square(p2, p4) ) + A17 * square(p2, p4) * angle(p2, p3) * angle(p5, p1) * angle(p2, p5) * ( angle(p3, p2) * square(p2, p3) + angle(p2, p4) * square(p2, p4) ) + A18 * square(p5, p4) * angle(p2, p3) * angle(p5, p1) * angle(p2, p5) * ( angle(p3, p5) * square(p2, p3) + angle(p5, p4) * square(p2, p4) ) + A19 * angle(p1, p2) * square(p3, p4) * angle(p3, p5)^2 + A20 * angle(p1, p2) * square(p1, p4)^2 * angle(p1, p5)^2 * angle(p3, p4) + A21 * angle(p1, p2) * angle(p1, p5) * ( square(p1, p2) * angle(p3, p2) * angle(p3, p5) * square(p3, p4) + square(p1, p4) * square(p2, p4) * angle(p3, p4) * angle(p2, p5) ) + A22 * angle(p1, p2) * square(p1, p4) * square(p2, p4) * angle(p1, p5) * angle(p2, p5) * angle(p3, p4) + A23 * angle(p1, p2) * square(p2, p4)^2 * angle(p2, p5) * angle(p3, p4) )


M4_LRRLL = 1 / sqrt2 * C1 * af * gw * Q4 * ta / (pV^2 - mV^2) * ( 8 * A8 * square(p2, p3) * square(p3, p4) * angle(p3, p5) * square(p5, p1) + 4 * A9 * square(p3, p1) * square(p2, p5) * square(p3, p4) * angle(p3, p5) + 2 * A10 * square(p1, p5) * square(p2, p5) * ( s5v * angle(p1, p3) * square(p1, p4) - s1V * angle(p3, p5) * square(p4, p5) ) + 2 * A11 * square(p1, p5) * square(p2, p5) * ( s5v * angle(p2, p3) * square(p2, p4) - s2V * angle(p3, p5) * square(p4, p5) ) + 2 * A12 * square(p1, p2) * square(p1, p3) * square(p2, p3) * square(p4, p3) * angle(p1, p5) * angle(p2, p5) + A13 * angle(p1, p5)^2 * angle(p2, p5) * square(p1, p2) * (square(p1, p3) * square(p2, p3) * square(p1, p5) * square(p3, p4) + square(p1, p4) * square(p4, p5) * angle(p3, p4) * square(p1, p2) ) + A14 * s25 * square(p1, p2) * square(p2, p3)^2 * square(p3, p4) * angle(p1, p5)^2 + A15 * square(p1, p2) * angle(p1, p5)^2 * angle(p2, p5)^2 * square(p3, p4) * square(p4, p5)^2 + A16 * square(p1, p4) * square(p2, p3) * square(p1, p5) * square(p2, p5) * ( angle(p3, p1) * square(p2, p3) + angle(p1, p4) * square(p2, p4) ) + A17 * square(p2, p4) * square(p2, p3) * square(p1, p5) * square(p2, p5) * ( angle(p3, p2) * square(p2, p3) + angle(p2, p4) * square(p2, p4) ) + A18 * square(p5, p4) * square(p2, p3) * square(p1, p5) * square(p2, p5) * ( angle(p3, p5) * square(p2, p3) + angle(p5, p4) * square(p2, p4) ) + A19 * square(p2, p1) * square(p3, p4) * angle(p3, p5)^2 + A20 * square(p2, p1) * square(p1, p4)^2 * angle(p1, p5)^2 * angle(p3, p4) + A21 * square(p2, p1) * angle(p1, p5) * ( square(p1, p2) * angle(p3, p2) * angle(p3, p5) * square(p3, p4) + square(p1, p4) * square(p2, p4) * angle(p3, p4) * angle(p2, p5) ) + A22 * square(p2, p1) * square(p1, p4) * square(p2, p4) * angle(p1, p5) * angle(p2, p5) * angle(p3, p4) + A23 * square(p2, p1) * square(p2, p4)^2 * angle(p2, p5) * angle(p3, p4) )


M4_RLRLL = 1 / sqrt2 * C2 * af * gw * Q4 * ta / (pV^2 - mV^2) * ( 4 * A12 * angle(p2, p1) * square(p1, p4) * square(p2, p4) * angle(p3, p4) * angle(p1, p5) * angle(p2, p5) + ( s15 * A13 - A16 ) * angle(p2, p1) * angle(p2, p5) * (angle(p2, p1) * angle(p1, p3) * square(p3, p4) * angle(p3, p5) + square(p1, p4) * square(p2, p4) * angle(p5, p1) * square(p3, p4) ) + ( s15 * A14 - A17 ) * angle(p1, p2) * square(p2, p4)^2 * angle(p2, p5)^2 * angle(p3, p4) + ( s15 * A15 - A18 ) * s25 * angle(p1, p2) * angle(p3, p5)^2 * square(p3, p4) + A19 * angle(p2, p1) * angle(p3, p5)^2 * square(p3, p4) + A20 * angle(p2, p1) * square(p1, p4)^2 * angle(p1, p5)^2 * angle(p3, p4) + A21 * angle(p1, p2) * angle(p1, p5) * ( square(p1, p2) * angle(p3, p2) * angle(p3, p5) * square(p3, p4) + square(p1, p4) * square(p2, p4) * angle(p3, p4) * angle(p2, p5) ) + A22 * angle(p1, p2) * square(p1, p4) * square(p2, p4) * angle(p1, p5) * angle(p2, p5) * angle(p3, p4) + A23 * angle(p2, p1) * angle(p2, p4)^2 * angle(p2, p5) * angle(p3, p4) )


M4_LRLRR = 1 / sqrt2 * C1 * bf * gw * Q4 * ta / (pV^2 - mV^2) * ( 4 * A12 * square(p1, p2) * square(p1, p3) * square(p2, p3) * angle(p4, p3) * angle(p1, p5) * angle(p2, p5) + ( s15 * A13 - A16 ) * square(p1, p2) * angle(p2, p5) * (square(p1, p2) * angle(p1, p4) * square(p4, p3) * angle(p4, p5) + square(p1, p3) * square(p2, p3) * angle(p5, p1) * angle(p4, p3) ) + ( s15 * A14 - A17 ) * square(p2, p1) * square(p2, p3)^2 * angle(p2, p5)^2 * angle(p4, p3) + ( s15 * A15 - A18 ) * s25 * square(p2, p1) * angle(p4, p5)^2 * square(p4, p3) + A19 * square(p1, p2) * angle(p4, p5)^2 * square(p4, p3) + A20 * square(p1, p2) * square(p1, p3)^2 * angle(p1, p5)^2 * angle(p4, p3) + A21 * square(p2, p1) * angle(p1, p5) * ( square(p1, p2) * angle(p4, p2) * angle(p4, p5) * square(p4, p3) + square(p1, p3) * square(p2, p3) * angle(p4, p3) * angle(p2, p5) ) + A22 * square(p2, p1) * square(p1, p3) * square(p2, p3) * angle(p1, p5) * angle(p2, p5) * angle(p4, p3) + A23 * square(p1, p2) * square(p2, p3)^2 * angle(p2, p5) * angle(p4, p3) )


M4_RLLRR = 1 / sqrt2 * C2 * bf * gw * Q4 * ta / (pV^2 - mV^2) * ( 8 * A8 * angle(p2, p4) * square(p4, p3) * angle(p4, p5) * angle(p1, p5) + 4 * A9 * angle(p1, p4) * angle(p2, p5) * square(p4, p3) * angle(p4, p5) + 2 * A10 * angle(p1, p5) * angle(p2, p5) * ( s1V * angle(p4, p5) * square(p3, p5) * - s5v * angle(p1, p4) * square(p1, p3) ) + 2 * A11 * angle(p1, p5) * angle(p2, p5) * ( s2V * angle(p4, p5) * square(p3, p5) - s5v * angle(p2, p4) * square(p2, p3) ) + 2 * A12 * square(p1, p2) * angle(p1, p4) * angle(p2, p4) * square(p3, p4) * angle(p1, p5) * angle(p2, p5) + A13 * angle(p1, p5)^2 * angle(p2, p5) * square(p1, p2) * (angle(p4, p1) * angle(p2, p4) * square(p1, p5) * square(p4, p3) + square(p1, p3) * square(p3, p5) * angle(p3, p4) * angle(p1, p2) ) + A14 * s25 * square(p1, p2) * angle(p2, p4)^2 * square(p4, p3) * angle(p1, p5)^2 + A15 * square(p1, p2) * angle(p1, p5)^2 * angle(p2, p5)^2 * angle(p3, p4) * square(p3, p5)^2 + A16 * square(p1, p3) * angle(p2, p4) * angle(p5, p1) * angle(p2, p5) * ( angle(p4, p1) * square(p2, p4) + angle(p1, p3) * square(p2, p3) ) + A17 * square(p2, p3) * angle(p2, p4) * angle(p5, p1) * angle(p2, p5) * ( angle(p4, p2) * square(p2, p4) + angle(p2, p3) * square(p2, p3) ) + A18 * square(p5, p3) * angle(p2, p4) * angle(p5, p1) * angle(p2, p5) * ( angle(p4, p5) * square(p2, p4) + angle(p5, p3) * square(p2, p3) ) + A19 * angle(p1, p2) * square(p4, p3) * angle(p4, p5)^2 + A20 * angle(p1, p2) * square(p1, p3)^2 * angle(p1, p5)^2 * angle(p4, p3) + A21 * angle(p1, p2) * angle(p1, p5) * ( square(p1, p2) * angle(p4, p2) * angle(p4, p5) * square(p4, p3) + square(p1, p3) * square(p2, p3) * angle(p4, p3) * angle(p2, p5) ) + A22 * angle(p1, p2) * square(p1, p3) * square(p2, p3) * angle(p1, p5) * angle(p2, p5) * angle(p4, p3) + A23 * angle(p1, p2) * square(p2, p3)^2 * angle(p2, p5) * angle(p4, p3) )


M4_LRRRR = 1 / sqrt2 * C1 * bf * gw * Q4 * ta / (pV^2 - mV^2) * ( 8 * A8 * square(p2, p4) * square(p4, p3) * angle(p4, p5) * square(p5, p1) + 4 * A9 * square(p4, p1) * square(p2, p5) * square(p4, p3) * angle(p4, p5) + 2 * A10 * square(p1, p5) * square(p2, p5) * ( s5v * angle(p1, p4) * square(p1, p3) - s1V * angle(p4, p5) * square(p3, p5) ) + 2 * A11 * square(p1, p5) * square(p2, p5) * ( s5v * angle(p2, p4) * square(p2, p3) - s2V * angle(p4, p5) * square(p3, p5) ) + 2 * A12 * square(p1, p2) * square(p1, p4) * square(p2, p4) * square(p3, p4) * angle(p1, p5) * angle(p2, p5) + A13 * angle(p1, p5)^2 * angle(p2, p5) * square(p1, p2) * (square(p1, p4) * square(p2, p4) * square(p1, p5) * square(p4, p3) + square(p1, p3) * square(p3, p5) * angle(p4, p3) * square(p1, p2) ) + A14 * s25 * square(p1, p2) * square(p2, p4)^2 * square(p4, p3) * angle(p1, p5)^2 + A15 * square(p1, p2) * angle(p1, p5)^2 * angle(p2, p5)^2 * square(p4, p3) * square(p3, p5)^2 + A16 * square(p1, p3) * square(p2, p4) * square(p1, p5) * square(p2, p5) * ( angle(p4, p1) * square(p2, p4) + angle(p1, p3) * square(p2, p3) ) + A17 * square(p2, p3) * square(p2, p4) * square(p1, p5) * square(p2, p5) * ( angle(p4, p2) * square(p2, p4) + angle(p2, p3) * square(p2, p3) ) + A18 * square(p5, p3) * square(p2, p4) * square(p1, p5) * square(p2, p5) * ( angle(p4, p5) * square(p2, p4) + angle(p5, p3) * square(p2, p3) ) + A19 * square(p2, p1) * square(p4, p3) * angle(p4, p5)^2 + A20 * square(p2, p1) * square(p1, p3)^2 * angle(p1, p5)^2 * angle(p4, p3) + A21 * square(p2, p1) * angle(p1, p5) * ( square(p1, p2) * angle(p4, p2) * angle(p4, p5) * square(p4, p3) + square(p1, p3) * square(p2, p3) * angle(p4, p3) * angle(p2, p5) ) + A22 * square(p2, p1) * square(p1, p3) * square(p2, p3) * angle(p1, p5) * angle(p2, p5) * angle(p4, p3) + A23 * square(p2, p1) * square(p2, p3)^2 * angle(p2, p5) * angle(p4, p3) )


M4_RLRRR = 1 / sqrt2 * C2 * bf * gw * Q4 * ta / (pV^2 - mV^2) * ( 4 * A12 * angle(p2, p1) * square(p1, p3) * square(p2, p3) * angle(p4, p3) * angle(p1, p5) * angle(p2, p5) + ( s15 * A13 - A16 ) * angle(p2, p1) * angle(p2, p5) * (angle(p2, p1) * angle(p1, p4) * square(p4, p3) * angle(p4, p5) + square(p1, p3) * square(p2, p3) * angle(p5, p1) * square(p4, p3) ) + ( s15 * A14 - A17 ) * angle(p1, p2) * square(p2, p3)^2 * angle(p2, p5)^2 * angle(p4, p3) + ( s15 * A15 - A18 ) * s25 * angle(p1, p2) * angle(p4, p5)^2 * square(p4, p3) + A19 * angle(p2, p1) * angle(p4, p5)^2 * square(p4, p3) + A20 * angle(p2, p1) * square(p1, p3)^2 * angle(p1, p5)^2 * angle(p4, p3) + A21 * angle(p1, p2) * angle(p1, p5) * ( square(p1, p2) * angle(p4, p2) * angle(p4, p5) * square(p4, p3) + square(p1, p3) * square(p2, p3) * angle(p4, p3) * angle(p2, p5) ) + A22 * angle(p1, p2) * square(p1, p3) * square(p2, p3) * angle(p1, p5) * angle(p2, p5) * angle(p4, p3) + A23 * angle(p2, p1) * angle(p2, p3)^2 * angle(p2, p5) * angle(p4, p3) )


M4_LLLLL = 1 / sqrt2 * C3 * af * gw * Q4 * ta / (pV^2 - mV^2) * ( ( s12 * A1 + s12 * A2 + s125 * A3 + 2 * s25 * A7 ) * angle(p5, p2) * angle(p5, p3) * square(p4, p1) + A4 * angle(p3, p1) * square(p1, p4) * angle(p2, p5)^2 * square(p1, p2) + A5 * angle(p3, p2) * square(p2, p4) * angle(p2, p5)^2 * square(p1, p2) + A6 * angle(p3, p5) * square(p5, p4) * angle(p2, p5)^2 * square(p1, p2) + 2 * A7 * angle(p2, p5) * angle(p1, p5) * square(p2, p1) * angle(p2, p3) * square(p4, p1) )


M4_RRLLL = 1 / sqrt2 * C4 * af * gw * Q4 * ta / (pV^2 - mV^2) * ( A1 * angle(p3, p1) * square(p1, p4) * angle(p1, p5)^2 * square(p2, p1) + A2 * angle(p3, p2) * square(p2, p4) * angle(p1, p5)^2 * square(p2, p1) + A3 * angle(p3, p5) * square(p5, p4) * angle(p1, p5)^2 * square(p2, p1) + 2 * A7 * angle(p1, p5) * angle(p2, p5) * square(p2, p1) * square(p2, p4) * angle(p3, p1) + ( s12 * A4 + s12 * A5 + s125 * A6 - 2 * s15 * A7 ) * angle(p5, p1) * square(p2, p4) * angle(p3, p5) )


M4_LLRLL = 1 / sqrt2 * C3 * af * gw * Q4 * ta / (pV^2 - mV^2) * ( A1 * angle(p3, p1) * square(p1, p4) * square(p1, p5)^2 * angle(p1, p2) + A2 * angle(p3, p2) * square(p2, p4) * square(p1, p5)^2 * angle(p1, p2) + A3 * angle(p3, p5) * square(p5, p4) * square(p1, p5)^2 * angle(p1, p2) + 2 * A7 * square(p1, p5) * square(p2, p5) * angle(p1, p2) * angle(p2, p3) * square(p4, p1) + ( s12 * A4 + s12 * A5 + s125 * A6 - 2 * s15 * A7 ) * square(p1, p5) * angle(p2, p3) * square(p4, p5) )


M4_RRRLL = 1 / sqrt2 * C4 * af * gw * Q4 * ta / (pV^2 - mV^2) * ( ( s12 * A1 + s12 * A2 + s125 * A3 + 2 * s25 * A7 ) * square(p2, p5) * square(p5, p4) * angle(p3, p1) + A4 * angle(p3, p1) * square(p1, p4) * square(p2, p5)^2 * angle(p2, p1) + A5 * angle(p3, p2) * square(p2, p4) * square(p2, p5)^2 * angle(p2, p1) + A6 * angle(p3, p5) * square(p5, p4) * square(p2, p5)^2 * angle(p2, p1) + 2 * A7 * square(p1, p5) * square(p2, p5) * angle(p2, p1) * square(p2, p4) * angle(p3, p1) )


M4_LLLRR = 1 / sqrt2 * C3 * bf * gw * Q4 * ta / (pV^2 - mV^2) * ( ( s12 * A1 + s12 * A2 + s125 * A3 + 2 * s25 * A7 ) * angle(p5, p2) * angle(p5, p4) * square(p3, p1) + A4 * angle(p4, p1) * square(p1, p3) * angle(p2, p5)^2 * square(p1, p2) + A5 * angle(p4, p2) * square(p2, p3) * angle(p2, p5)^2 * square(p1, p2) + A6 * angle(p4, p5) * square(p5, p3) * angle(p2, p5)^2 * square(p1, p2) + 2 * A7 * angle(p2, p5) * angle(p1, p5) * square(p2, p1) * angle(p2, p4) * square(p3, p1) )


M4_RRLRR = 1 / sqrt2 * C4 * bf * gw * Q4 * ta / (pV^2 - mV^2) * ( A1 * angle(p4, p1) * square(p1, p3) * angle(p1, p5)^2 * square(p2, p1) + A2 * angle(p4, p2) * square(p2, p3) * angle(p1, p5)^2 * square(p2, p1) + A3 * angle(p4, p5) * square(p5, p3) * angle(p1, p5)^2 * square(p2, p1) + 2 * A7 * angle(p1, p5) * angle(p2, p5) * square(p2, p1) * square(p2, p3) * angle(p4, p1) + ( s12 * A4 + s12 * A5 + s125 * A6 - 2 * s15 * A7 ) * angle(p5, p1) * square(p2, p3) * angle(p4, p5) )


M4_LLRRR = 1 / sqrt2 * C3 * bf * gw * Q4 * ta / (pV^2 - mV^2) * ( A1 * angle(p4, p1) * square(p1, p3) * square(p1, p5)^2 * angle(p1, p2) + A2 * angle(p4, p2) * square(p2, p3) * square(p1, p5)^2 * angle(p1, p2) + A3 * angle(p4, p5) * square(p5, p3) * square(p1, p5)^2 * angle(p1, p2) + 2 * A7 * square(p1, p5)square(p2, p5) * angle(p1, p2) * angle(p2, p4) * square(p3, p1) + ( s12 * A4 + s12 * A5 + s125 * A6 - 2 * s15 * A7 ) * square(p1, p5) * angle(p2, p4) * square(p3, p5) )


M4_RRRRR = 1 / sqrt2 * C4 * bf * gw * Q4 * ta / (pV^2 - mV^2) * ( ( s12 * A1 + s12 * A2 + s125 * A3 + 2 * s25 * A7 ) * square(p2, p5) * square(p5, p3) * angle(p4, p1) + A4 * angle(p4, p1) * square(p1, p3) * square(p2, p5)^2 * angle(p2, p1) + A5 * angle(p4, p2) * square(p2, p3) * square(p2, p5)^2 * angle(p2, p1) + A6 * angle(p4, p5) * square(p5, p3) * square(p2, p5)^2 * angle(p2, p1) + 2 * A7 * square(p1, p5) * square(p2, p5) * angle(p2, p1) * square(p2, p3) * angle(p4, p1) )


M3_LRLLL = 1 / sqrt2 * C1 * af * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( 2 * B12 * square(p1, p2)^2 * angle(p1, p5) * angle(p2, p5) * ( angle(p1, p3) * square(p1, p4) - angle(p2, p3) * square(p2, p4) ) + B13 * s15 * square(p1, p2) * angle(p2, p5) * ( angle(p3, p1) * square(p1, p4) * square(p2, p1) * angle(p1, p5) - s12 * square(p2, p4) * angle(p3, p5) ) + B14 * s15 * square(p1, p2) * angle(p2, p5) * ( angle(p3, p2) * square(p2, p4) * square(p2, p1) * angle(p1, p5) - s12 * square(p2, p4) * angle(p3, p5) ) + B15 * s15 * square(p1, p2) * angle(p2, p5) * ( angle(p3, p5) * square(p5, p4) * square(p2, p1) * angle(p1, p5) - s5v * square(p2, p4) * angle(p3, p5) ) + B16 * square(p1, p2) * angle(p2, p5) * ( angle(p1, p3) * square(p1, p4) * angle(p1, p5) * square(p2, p1) + s12 * square(p2, p4) * angle(p3, p5) ) + B17 * square(p1, p2) * angle(p2, p5) * ( angle(p2, p3) * square(p2, p4) * angle(p1, p5) * square(p2, p1) + s12 * square(p2, p4) * angle(p3, p5) ) + B18 * square(p1, p2) * angle(p2, p5) * ( angle(p3, p5) * square(p4, p5) * angle(p1, p5) * square(p2, p1) + s5v * square(p2, p4) * angle(p3, p5) ) + B19 * square(p1, p2) * angle(p3, p5) * ( angle(p1, p5) * square(p1, p4) + angle(p2, p5) * square(p2, p4) ) + B20 * square(p1, p2)^2 * square(p1, p4) * angle(p2, p3) * angle(p1, p5)^2 + B21 * square(p1, p2)^2 * square(p2, p4) * angle(p2, p3) * angle(p2, p5)^2 + B22 * square(p1, p2)^2 * square(p1, p4) * angle(p2, p3) * angle(p2, p5)^2 + B23 * square(p1, p2)^2 * square(p2, p4) * angle(p2, p3) * angle(p2, p5)^2 )


M3_RLLLL = 1 / sqrt2 * C2 * af * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( 4 * ( B8 + B9 ) * angle(p1, p5) * angle(p2, p5) * ( angle(p2, p3) * square(p2, p4) + angle(p1, p3) * square(p1, p4) ) + 2 *B10 * angle(p1, p5) * angle(p2, p5) * ( s5v * angle(p3, p1) * square(p1, p4) * - s12 * angle(p3, p5) * square(p5, p4) ) + 2 *B11 * angle(p1, p5) * angle(p2, p5) * ( s5v * angle(p3, p2) * square(p2, p4) * - s12 * angle(p3, p5) * square(p5, p4) ) + 2 *B12 * s12 angle(p1, p5) * angle(p2, p5) * ( angle(p2, p3) * square(p2, p4) * - angle(p1, p3) * square(p1, p4) ) + B13 * s15 * angle(p1, p2) * angle(p2, p5) * ( angle(p3, p1) * square(p1, p4) * square(p2, p1) * angle(p1, p5) * - s12 * square(p2, p4) * angle(p3, p5) ) + B14 * s15 * angle(p1, p2) * angle(p2, p5) * ( angle(p3, p2) * square(p2, p4) * square(p2, p1) * angle(p1, p5) * - s12 * square(p2, p4) * angle(p3, p5) ) + B15 * s15 * angle(p1, p2) * angle(p2, p5) * ( angle(p3, p5) * square(p5, p4) * square(p2, p1) * angle(p1, p5) * - s5v * square(p2, p4)  angle(p3, p5) ) + B16 * angle(p1, p2) * angle(p2, p5) * ( angle(p1, p3) * square(p1, p4) * angle(p1, p5) * square(p2, p1) + s12 * square(p2, p4) * angle(p3, p5) ) + B17 * angle(p1, p2) * angle(p2, p5) * ( angle(p2, p3) * square(p2, p4) * angle(p1, p5) * square(p2, p1) + s12 * square(p2, p4) * angle(p3, p5) ) + B18 * angle(p1, p2) * angle(p2, p5) * ( angle(p3, p5) * square(p4, p5) * angle(p1, p5) * square(p2, p1) + s5v * square(p2, p4) * angle(p3, p5) ) + B19 * angle(p1, p2) * angle(p3, p5) * ( angle(p1, p5) * square(p1, p4) + angle(p2, p5) * square(p2, p4) ) + B20 * s12 * square(p1, p4) * angle(p3, p2) * angle(p1, p5)^2 + B21 * s12 * square(p2, p4) * angle(p3, p2) * angle(p2, p5)^2 + B22 * s12 * square(p1, p4) * angle(p3, p2) * angle(p2, p5)^2 + B23 * s12 * square(p2, p4) * angle(p3, p2) * angle(p1, p5)^2 )


M3_LRRLL = - 1 / sqrt2 * C1 * af * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( 8 * B8 * square(p1, p2) * angle(p1, p3) * square(p1, p5) * square(p4, p5) + 8 * B9 * square(p1, p2) * angle(p2, p3) * square(p2, p5) * square(p4, p5) + 2 * B10 * square(p1, p5) * square(p2, p5) * (s12 * angle(p3, p5) * square(p4, p5) * - s5v * angle(p1, p3) * square(p1, p4) ) + 2 * B11 * square(p1, p5) * square(p2, p5) * (s12 * angle(p3, p5) * square(p4, p5) * - s5v * angle(p2, p3) * square(p2, p4) ) + 2 * B12 * s12 * square(p1, p5) * square(p2, p5) * ( angle(p2, p3) * square(p2, p4) * - angle(p1, p3) * square(p1, p4) ) + ( s15 * B13 + B16 ) * square(p2, p1) * square(p2, p5) * ( angle(p3, p1) * square(p1, p4) * angle(p1, p2) * square(p1, p5) + s12 * angle(p2, p3) * square(p4, p5) ) + ( s15 * B14 + B17 ) * square(p2, p1) * square(p2, p5) * angle(p2, p3) * ( angle(p2, p1) * square(p2, p4) * square(p1, p5) + s12 * square(p4, p5) ) + ( s15 * B15 + B18 ) * square(p2, p1) * square(p2, p5) * square(p4, p5) * ( angle(p2, p1) square(p1, p5) * angle(p3, p5) + s5v * angle(p2, p3) ) + B19 * square(p2, p1) * angle(p3, p5) * ( square(p1, p5) * square(p1, p4) + square(p2, p5) * square(p2, p4) ) + ( s15 * B20 + s25 * B22 ) * square(p1, p2)^2 * square(p1, p4) * angle(p2, p3) + ( s25 * B21 + s15 * B23 ) * square(p1, p2)^2 * square(p2, p4) * angle(p2, p3) )


M3_RLRLL = - 1 / sqrt2 * C1 * af * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( 2 * B12 * angle(p1, p2)^2 * square(p1, p5) * square(p2, p5) * ( angle(p1, p3) * square(p1, p4) - angle(p2, p3) * square(p2, p4) ) + ( s15 * B13 + B16 ) * angle(p1, p2) * square(p2, p5) * ( angle(p3, p1) * square(p1, p4) * angle(p1, p2) * square(p1, p5) + s12 * angle(p2, p3) * square(p4, p5) ) + ( s15 * B14 + B17 ) * angle(p1, p2) * square(p2, p5) * angle(p2, p3) * ( angle(p2, p1) * square(p2, p4) * square(p1, p5) + s12 square(p4, p5) ) + ( s15 * B15 + B18 ) * angle(p1, p2) * square(p2, p5) * square(p4, p5) * ( angle(p2, p1) * square(p1, p5) * angle(p3, p5) + s5v * angle(p2, p3) ) + B19 * angle(p1, p2) * angle(p3, p5) * ( square(p1, p5) * square(p1, p4) + square(p2, p5) * square(p2, p4) ) + ( s15 * B20 + s25 * B22 ) * s12 * square(p1, p4) * angle(p2, p3) + ( s25 * B21 + s15 * B23 ) * s12 * square(p2, p4) * angle(p2, p3) )


M3_LRLRR = 1 / sqrt2 * C1 * bf * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( 2 * B12 * square(p1, p2)^2 * angle(p1, p5) * angle(p2, p5) * ( angle(p1, p4) * square(p1, p3) - angle(p2, p4) * square(p2, p3) ) + B13 * s15 * square(p1, p2) * angle(p2, p5) * ( angle(p4, p1) * square(p1, p3) * square(p2, p1) * angle(p1, p5) - s12 * square(p2, p3) * angle(p4, p5) ) + B14 * s15 * square(p1, p2) * angle(p2, p5) * ( angle(p4, p2) * square(p2, p3) * square(p2, p1) * angle(p1, p5) - s12 * square(p2, p3) * angle(p4, p5) ) + B15 * s15 * square(p1, p2) * angle(p2, p5) * ( angle(p4, p5) * square(p5, p3) * square(p2, p1) * angle(p1, p5) - s5v * square(p2, p3) * angle(p4, p5) ) + B16 * square(p1, p2) * angle(p2, p5) * ( angle(p1, p4) * square(p1, p3) * angle(p1, p5) * square(p2, p1) + s12 * square(p2, p3) * angle(p4, p5) ) + B17 * square(p1, p2) * angle(p2, p5) * ( angle(p2, p4) * square(p2, p3) * angle(p1, p5) * square(p2, p1) + s12 * square(p2, p3) * angle(p4, p5) ) + B18 * square(p1, p2) * angle(p2, p5) * ( angle(p4, p5) * square(p3, p5) * angle(p1, p5) * square(p2, p1) + s5v * square(p2, p3) * angle(p4, p5) ) + B19 * square(p1, p2) * angle(p4, p5) * ( angle(p1, p5) * square(p1, p3) + angle(p2, p5) * square(p2, p3) ) + B20 * square(p1, p2)^2 * square(p1, p3) * angle(p2, p4) * angle(p1, p5)^2 + B21 * square(p1, p2)^2 * square(p2, p3) * angle(p2, p4) * angle(p2, p5)^2 + B22 * square(p1, p2)^2 * square(p1, p3) * angle(p2, p4) * angle(p2, p5)^2 + B23 * square(p1, p2)^2 * square(p2, p3) * angle(p2, p4) * angle(p2, p5)^2 )


M3_RLLRR = 1 / sqrt2 * C2 * bf * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( 4 * ( B8 + B9 ) * angle(p1, p5) * angle(p2, p5) * ( angle(p2, p4) * square(p2, p3) + angle(p1, p4) * square(p1, p3) ) + 2 *B10 * angle(p1, p5) * angle(p2, p5) * ( s5v * angle(p4, p1) * square(p1, p3) * - s12 * angle(p4, p5) * square(p5, p3) ) + 2 *B11 * angle(p1, p5) * angle(p2, p5) * ( s5v * angle(p4, p2) * square(p2, p3) * - s12 * angle(p4, p5) * square(p5, p3) ) + 2 *B12 * s12 angle(p1, p5) * angle(p2, p5) * ( angle(p2, p4) * square(p2, p3) * - angle(p1, p4) * square(p1, p3) ) + B13 * s15 * angle(p1, p2) * angle(p2, p5) * ( angle(p4, p1) * square(p1, p3) * square(p2, p1) * angle(p1, p5) * - s12 * square(p2, p3) * angle(p4, p5) ) + B14 * s15 * angle(p1, p2) * angle(p2, p5) * ( angle(p4, p2) * square(p2, p3) * square(p2, p1) * angle(p1, p5) * - s12 * square(p2, p3) * angle(p4, p5) ) + B15 * s15 * angle(p1, p2) * angle(p2, p5) * ( angle(p4, p5) * square(p5, p3) * square(p2, p1) * angle(p1, p5) * - s5v * square(p2, p3)  angle(p4, p5) ) + B16 * angle(p1, p2) * angle(p2, p5) * ( angle(p1, p4) * square(p1, p3) * angle(p1, p5) * square(p2, p1) + s12 * square(p2, p3) * angle(p4, p5) ) + B17 * angle(p1, p2) * angle(p2, p5) * ( angle(p2, p4) * square(p2, p3) * angle(p1, p5) * square(p2, p1) + s12 * square(p2, p3) * angle(p4, p5) ) + B18 * angle(p1, p2) * angle(p2, p5) * ( angle(p4, p5) * square(p3, p5) * angle(p1, p5) * square(p2, p1) + s5v * square(p2, p3) * angle(p4, p5) ) + B19 * angle(p1, p2) * angle(p4, p5) * ( angle(p1, p5) * square(p1, p3) + angle(p2, p5) * square(p2, p3) ) + B20 * s12 * square(p1, p3) * angle(p4, p2) * angle(p1, p5)^2 + B21 * s12 * square(p2, p3) * angle(p4, p2) * angle(p2, p5)^2 + B22 * s12 * square(p1, p3) * angle(p4, p2) * angle(p2, p5)^2 + B23 * s12 * square(p2, p3) * angle(p4, p2) * angle(p1, p5)^2 )


M3_LRRRR = - 1 / sqrt2 * C1 * bf * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( 8 * B8 * square(p1, p2) * angle(p1, p4) * square(p1, p5) * square(p3, p5) + 8 * B9 * square(p1, p2) * angle(p2, p4) * square(p2, p5) * square(p3, p5) + 2 * B10 * square(p1, p5) * square(p2, p5) * (s12 * angle(p4, p5) * square(p3, p5) * - s5v * angle(p1, p4) * square(p1, p3) ) + 2 * B11 * square(p1, p5) * square(p2, p5) * (s12 * angle(p4, p5) * square(p3, p5) * - s5v * angle(p2, p4) * square(p2, p3) ) + 2 * B12 * s12 * square(p1, p5) * square(p2, p5) * ( angle(p2, p4) * square(p2, p3) * - angle(p1, p4) * square(p1, p3) ) + ( s15 * B13 + B16 ) * square(p2, p1) * square(p2, p5) * ( angle(p4, p1) * square(p1, p3) * angle(p1, p2) * square(p1, p5) + s12 * angle(p2, p4) * square(p3, p5) ) + ( s15 * B14 + B17 ) * square(p2, p1) * square(p2, p5) * angle(p2, p4) * ( angle(p2, p1) * square(p2, p3) * square(p1, p5) + s12 * square(p3, p5) ) + ( s15 * B15 + B18 ) * square(p2, p1) * square(p2, p5) * square(p3, p5) * ( angle(p2, p1) square(p1, p5) * angle(p4, p5) + s5v * angle(p2, p4) ) + B19 * square(p2, p1) * angle(p4, p5) * ( square(p1, p5) * square(p1, p3) + square(p2, p5) * square(p2, p3) ) + ( s15 * B20 + s25 * B22 ) * square(p1, p2)^2 * square(p1, p3) * angle(p2, p4) + ( s25 * B21 + s15 * B23 ) * square(p1, p2)^2 * square(p2, p3) * angle(p2, p4) )


M3_RLRRR = - 1 / sqrt2 * C1 * bf * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( 2 * B12 * angle(p1, p2)^2 * square(p1, p5) * square(p2, p5) * ( angle(p1, p4) * square(p1, p3) - angle(p2, p4) * square(p2, p3) ) + ( s15 * B13 + B16 ) * angle(p1, p2) * square(p2, p5) * ( angle(p4, p1) * square(p1, p3) * angle(p1, p2) * square(p1, p5) + s12 * angle(p2, p4) * square(p3, p5) ) + ( s15 * B14 + B17 ) * angle(p1, p2) * square(p2, p5) * angle(p2, p4) * ( angle(p2, p1) * square(p2, p3) * square(p1, p5) + s12 square(p3, p5) ) + ( s15 * B15 + B18 ) * angle(p1, p2) * square(p2, p5) * square(p3, p5) * ( angle(p2, p1) * square(p1, p5) * angle(p4, p5) + s5v * angle(p2, p4) ) + B19 * angle(p1, p2) * angle(p4, p5) * ( square(p1, p5) * square(p1, p3) + square(p2, p5) * square(p2, p3) ) + ( s15 * B20 + s25 * B22 ) * s12 * square(p1, p3) * angle(p2, p4) + ( s25 * B21 + s15 * B23 ) * s12 * square(p2, p3) * angle(p2, p4) )


M3_LLLLL = 1 / sqrt2 * C3 * af * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( ( s12 * B1 + s12 * B2 + s125 * B3 + 2 * s25 * B7 ) * angle(p5, p2) * angle(p5, p3) * square(p4, p1) + B4 * angle(p3, p1) * square(p1, p4) * angle(p2, p5)^2 * square(p1, p2) + B5 * angle(p3, p2) * square(p2, p4) * angle(p2, p5)^2 * square(p1, p2) + B6 * angle(p3, p5) * square(p5, p4) * angle(p2, p5)^2 * square(p1, p2) + 2 * B7 * angle(p2, p5) * angle(p1, p5) * square(p2, p1) * angle(p2, p3) * square(p4, p1) )


M3_RRLLL = 1 / sqrt2 * C4 * af * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( B1 * angle(p3, p1) * square(p1, p4) * angle(p1, p5)^2 * square(p2, p1) + B2 * angle(p3, p2) * square(p2, p4) * angle(p1, p5)^2 * square(p2, p1) + B3 * angle(p3, p5) * square(p5, p4) * angle(p1, p5)^2 * square(p2, p1) + 2 * B7 * angle(p1, p5) * angle(p2, p5) * square(p2, p1) * square(p2, p4) * angle(p3, p1) + ( s12 * B4 + s12 * B5 + s125 * B6 - 2 * s15 * B7 ) * angle(p5, p1) * square(p2, p4) * angle(p3, p5) )


M3_LLRLL = 1 / sqrt2 * C3 * af * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( B1 * angle(p3, p1) * square(p1, p4) * square(p1, p5)^2 * angle(p1, p2) + B2 * angle(p3, p2) * square(p2, p4) * square(p1, p5)^2 * angle(p1, p2) + B3 * angle(p3, p5) * square(p5, p4) * square(p1, p5)^2 * angle(p1, p2) + 2 * B7 * square(p1, p5) * square(p2, p5) * angle(p1, p2) * angle(p2, p3) * square(p4, p1) + ( s12 * B4 + s12 * B5 + s125 * B6 - 2 * s15 * B7 ) * square(p1, p5) * angle(p2, p3) * square(p4, p5) )


M3_RRRLL = 1 / sqrt2 * C4 * af * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( ( s12 * B1 + s12 * B2 + s125 * B3 + 2 * s25 * B7 ) * square(p2, p5) * square(p5, p4) * angle(p3, p1) + B4 * angle(p3, p1) * square(p1, p4) * square(p2, p5)^2 * angle(p2, p1) + B5 * angle(p3, p2) * square(p2, p4) * square(p2, p5)^2 * angle(p2, p1) + B6 * angle(p3, p5) * square(p5, p4) * square(p2, p5)^2 * angle(p2, p1) + 2 * B7 * square(p1, p5) * square(p2, p5) * angle(p2, p1) * square(p2, p4) * angle(p3, p1) )


M3_LLLRR = 1 / sqrt2 * C3 * bf * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( ( s12 * B1 + s12 * B2 + s125 * B3 + 2 * s25 * B7 ) * angle(p5, p2) * angle(p5, p4) * square(p3, p1) + B4 * angle(p4, p1) * square(p1, p3) * angle(p2, p5)^2 * square(p1, p2) + B5 * angle(p4, p2) * square(p2, p3) * angle(p2, p5)^2 * square(p1, p2) + B6 * angle(p4, p5) * square(p5, p3) * angle(p2, p5)^2 * square(p1, p2) + 2 * B7 * angle(p2, p5) * angle(p1, p5) * square(p2, p1) * angle(p2, p4) * square(p3, p1) )


M3_RRLRR = 1 / sqrt2 * C4 * bf * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( B1 * angle(p4, p1) * square(p1, p3) * angle(p1, p5)^2 * square(p2, p1) + B2 * angle(p4, p2) * square(p2, p3) * angle(p1, p5)^2 * square(p2, p1) + B3 * angle(p4, p5) * square(p5, p3) * angle(p1, p5)^2 * square(p2, p1) + 2 * B7 * angle(p1, p5) * angle(p2, p5) * square(p2, p1) * square(p2, p3) * angle(p4, p1) + ( s12 * B4 + s12 * B5 + s125 * B6 - 2 * s15 * B7 ) * angle(p5, p1) * square(p2, p3) * angle(p4, p5) )


M3_LLRRR = 1 / sqrt2 * C3 * bf * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( B1 * angle(p4, p1) * square(p1, p3) * square(p1, p5)^2 * angle(p1, p2) + B2 * angle(p4, p2) * square(p2, p3) * square(p1, p5)^2 * angle(p1, p2) + B3 * angle(p4, p5) * square(p5, p3) * square(p1, p5)^2 * angle(p1, p2) + 2 * B7 * square(p1, p5)square(p2, p5) * angle(p1, p2) * angle(p2, p4) * square(p3, p1) + ( s12 * B4 + s12 * B5 + s125 * B6 - 2 * s15 * B7 ) * square(p1, p5) * angle(p2, p4) * square(p3, p5) )


M3_RRRRR = 1 / sqrt2 * C4 * bf * mv * gw^2 * Q3 * ta / ( (s12 - mV^2) * (pV^2 - mV^2) ) * ( ( s12 * B1 + s12 * B2 + s125 * B3 + 2 * s25 * B7 ) * square(p2, p5) * square(p5, p3) * angle(p4, p1) + B4 * angle(p4, p1) * square(p1, p3) * square(p2, p5)^2 * angle(p2, p1) + B5 * angle(p4, p2) * square(p2, p3) * square(p2, p5)^2 * angle(p2, p1) + B6 * angle(p4, p5) * square(p5, p3) * square(p2, p5)^2 * angle(p2, p1) + 2 * B7 * square(p1, p5) * square(p2, p5) * angle(p2, p1) * square(p2, p3) * angle(p4, p1) )











